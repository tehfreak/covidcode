{"version":3,"sources":["serviceWorkerRegistration.ts","reportWebVitals.ts","theme.ts","modules/codes/components/Codes/Codes.styles.ts","modules/codes/services/CodesService.ts","modules/codes-code/components/Code/Code.styles.ts","components/Header/Header.styles.ts","components/Header/Header.tsx","modules/codes-code/components/Code/Code.tsx","modules/codes-codelist/components/Codelist/Codelist.styles.ts","modules/codes-codelist/components/CodelistItem/CodelistItem.styles.ts","modules/codes-codelist/components/CodelistItem/CodelistItem.tsx","components/FileField/FileField.styles.ts","components/FileField/FileField.tsx","modules/codes-codelist/components/CodelistItemForm/CodelistItemForm.tsx","modules/codes-codelist/components/CodelistTool/CreateItem/CreateItem.tsx","modules/codes-codelist/components/CodelistTool/UpdateItem/UpdateItem.tsx","modules/codes-codelist/components/CodelistTool/DeleteItem/DeleteItem.tsx","modules/codes-codelist/components/Codelist/Codelist.tsx","modules/codes/components/Codes/Codes.tsx","modules/config/containers/Config/Config.styles.ts","modules/config/containers/Config/Config.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","styles","createStyles","root","flexGrow","height","display","flexDirection","main","alignItems","justifyContent","nav","CODELIST","id","name","fetchCodelist","query","a","codelist","localStorage","getItem","JSON","parse","undefined","filter","code","fetchCode","data","Error","uuid","push","setItem","stringify","map","existsCode","mainImage","foot","position","bottom","footToolbar","footTabs","footTab","header","headerMenu","marginRight","menuAvatar","marginLeft","useStyles","makeStyles","Header","props","classes","color","elevation","React","useState","menuOpen","setMenuOpen","AppBar","Container","maxWidth","Toolbar","disableGutters","IconButton","className","edge","onClick","Typography","variant","Drawer","anchor","open","onClose","Avatar","alt","src","process","List","ListItem","disablePadding","ListItemButton","component","NavLink","to","ListItemText","primary","Code","useParams","useEffect","putCurrentCodeId","setCode","codePending","setCodePending","setCodelist","codelistPending","setCodelistPending","active","imageUrl","length","Tabs","centered","scrollButtons","value","Tab","label","replace","progressContainer","progress","width","pointerEvents","padding","CodelistItem","item","menuAnchorRef","useRef","routeMatch","useRouteMatch","secondaryAction","ref","current","anchorEl","MenuItem","path","hidden","visibility","FileField","onChangeValue","otherProps","otherClasses","fileInputRef","displayValue","useMemo","substring","TextField","InputProps","endAdornment","disabled","click","onChange","type","onInput","event","files","file","reader","FileReader","onloadend","result","readAsDataURL","tabIndex","CodelistItemForm","onChangeData","margin","fullWidth","target","url","CreateItem","setData","submitPending","setSubmitPending","Dialog","fullScreen","Button","createCode","UpdateItem","updateCode","DeleteItem","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","deleteCode","Codelist","history","useHistory","LinearProgress","Fab","goBack","Codes","currentCodeId","setCurrentCodeId","currentCodeIdPending","setCurrentCodeIdPending","fetchCurrentCodeId","Config","ReactDOM","render","StrictMode","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.49292f54.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles'\r\n\r\nexport const theme = createTheme({\r\n\r\n})\r\n","import { createStyles } from '@mui/styles'\r\nimport { Theme } from '@mui/material'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n\r\n    main: {\r\n        flexGrow: 1,\r\n        height: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    nav: {\r\n\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import { v1 as uuid } from 'uuid'\r\n\r\nconst CODELIST = [{ id:'1', name:'TEH' }]\r\n\r\nexport interface ICode {\r\n    id: string\r\n    name: string\r\n    url?: string\r\n    imageUrl?: string\r\n}\r\n\r\nexport interface ICodelistQuery {\r\n    id?: string\r\n    //primary?: boolean\r\n}\r\n\r\nexport async function fetchCodelist(query:ICodelistQuery): Promise<ICode[]> {\r\n    let codelist: ICode[]\r\n    if (localStorage.getItem('codelist')) {\r\n        codelist = JSON.parse(localStorage.getItem('codelist')!)\r\n    } else {\r\n        codelist = CODELIST\r\n    }\r\n    if (query) {\r\n        if (query.id !== undefined) {\r\n            codelist = codelist.filter((code) => code.id === query.id)\r\n        }\r\n        //if (query.primary !== undefined) {\r\n        //    codelist = codelist.filter((code) => code.primary === query.primary)\r\n        //}\r\n    }\r\n    return codelist\r\n}\r\n\r\nexport async function fetchCode(id: string): Promise<ICode|null> {\r\n    const [ code ] = await fetchCodelist({ id })\r\n    return code || null\r\n}\r\n\r\nexport async function createCode(data: Partial<ICode>) {\r\n    if (!data.name) {\r\n        throw Error()\r\n    }\r\n    const code: ICode = {\r\n        ...data,\r\n        id: uuid(),\r\n        name: data.name,\r\n    }\r\n    const codelist: ICode[] = localStorage.getItem('codelist') ? JSON.parse(localStorage.getItem('codelist')!) : []\r\n    codelist.push(code)\r\n    localStorage.setItem('codelist', JSON.stringify(codelist))\r\n    return code\r\n}\r\n\r\nexport async function updateCode(id: string, data: Partial<ICode>) {\r\n    if (!data.name) {\r\n        throw Error()\r\n    }\r\n    const code: ICode = {\r\n        ...data,\r\n        id,\r\n        name: data.name,\r\n    }\r\n    let codelist: ICode[] = localStorage.getItem('codelist') ? JSON.parse(localStorage.getItem('codelist')!) : []\r\n    codelist = codelist.map((existsCode) => existsCode.id !== id ? existsCode : code)\r\n    localStorage.setItem('codelist', JSON.stringify(codelist))\r\n    return code\r\n}\r\n\r\nexport async function deleteCode(id: string) {\r\n    let codelist: ICode[] = localStorage.getItem('codelist') ? JSON.parse(localStorage.getItem('codelist')!) : []\r\n    codelist = codelist.filter((code) => code.id !== id)\r\n    localStorage.setItem('codelist', JSON.stringify(codelist))\r\n}\r\n\r\nexport async function fetchCurrentCodeId() {\r\n    return localStorage.getItem('currentCodeId')\r\n}\r\n\r\nexport async function putCurrentCodeId(id: string) {\r\n    localStorage.setItem('currentCodeId', id)\r\n}\r\n","import { createStyles } from '@mui/styles'\r\nimport { Theme } from '@mui/material'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n\r\n    },\r\n\r\n    main: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    mainImage: {\r\n        display: 'block',\r\n    },\r\n\r\n    foot: {\r\n        position: 'sticky',\r\n        bottom: 0,\r\n    },\r\n    footToolbar: {\r\n        justifyContent: 'center',\r\n    },\r\n    footTabs: {\r\n\r\n    },\r\n    footTab: {\r\n        height: 64,\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import { createStyles } from '@mui/styles'\r\nimport { Theme } from '@mui/material'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    header: {\r\n\r\n    },\r\n    headerMenu: {\r\n        marginRight: 12,\r\n    },\r\n\r\n    menuAvatar: {\r\n        marginLeft: -12,\r\n        marginRight: 12,\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@mui/styles/makeStyles'\r\nimport styles from './Header.styles'\r\n\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Container from '@mui/material/Container'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport Typography from '@mui/material/Typography'\r\nimport Drawer from '@mui/material/Drawer'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport List from '@mui/material/List'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemButton from '@mui/material/ListItemButton'\r\nimport ListItemText from '@mui/material/ListItemText'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Header.name,\r\n})\r\n\r\nexport interface IHeaderProps {\r\n    color?: 'transparent'\r\n    elevation?: number\r\n}\r\n\r\nexport default function Header(props: IHeaderProps) {\r\n    const classes = useStyles()\r\n\r\n    const { color, elevation } = props\r\n\r\n    const [ menuOpen, setMenuOpen ] = React.useState(false)\r\n\r\n    return (\r\n        <>\r\n\r\n            <AppBar position=\"sticky\" color={color} elevation={elevation}>\r\n                <Container maxWidth={false}>\r\n                    <Toolbar disableGutters>\r\n\r\n                        <IconButton\r\n                            className={classes.headerMenu}\r\n                            color=\"inherit\"\r\n                            edge=\"start\"\r\n                            onClick={() => setMenuOpen(true)}\r\n                        >\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n\r\n                        <Typography variant=\"h6\">\r\n                            Covidcode\r\n                        </Typography>\r\n\r\n                    </Toolbar>\r\n                </Container>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                anchor=\"left\"\r\n                open={menuOpen}\r\n                onClose={() => setMenuOpen(false)}\r\n            >\r\n                <AppBar position=\"sticky\" color={color} elevation={elevation}>\r\n                    <Container maxWidth={false}>\r\n                        <Toolbar disableGutters>\r\n                            <Avatar className={classes.menuAvatar} alt=\"Covidcode\" src={process.env.PUBLIC_URL + '/logo512.png'}/>\r\n                            <Typography variant=\"h6\">\r\n                                Covidcode\r\n                            </Typography>\r\n                        </Toolbar>\r\n                    </Container>\r\n                </AppBar>\r\n                <List>\r\n\r\n                    <ListItem disablePadding>\r\n                        <ListItemButton\r\n                            component={NavLink}\r\n                            to={`/codes/codelist`}\r\n                        >\r\n                            <ListItemText primary=\"Список кодов\" />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n\r\n                    <ListItem disablePadding>\r\n                        <ListItemButton\r\n                            component={NavLink}\r\n                            to={`/config`}\r\n                        >\r\n                            <ListItemText primary=\"Настройки\" />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n\r\n                </List>\r\n            </Drawer>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport makeStyles from '@mui/styles/makeStyles'\r\nimport styles from './Code.styles'\r\n\r\nimport { useParams } from 'react-router-dom'\r\nimport { fetchCode, fetchCodelist, putCurrentCodeId, ICode } from '../../../codes/services/CodesService'\r\n\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Container from '@mui/material/Container'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport Tabs from '@mui/material/Tabs'\r\nimport Tab from '@mui/material/Tab'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Header from '../../../../components/Header/Header'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Code.name,\r\n})\r\n\r\nexport default function Code() {\r\n    const classes = useStyles()\r\n\r\n    const { id } = useParams<{ id:string }>()\r\n\r\n    React.useEffect(() => {\r\n        putCurrentCodeId(id)\r\n    }, [id])\r\n\r\n    const [ code, setCode ] = React.useState<ICode | null>()\r\n    const [ codePending, setCodePending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        setCodePending(true)\r\n        fetchCode(id)\r\n            .then((code) => {\r\n                setCode(code)\r\n                setCodePending(false)\r\n            })\r\n        ;\r\n    }, [id])\r\n\r\n    const [ codelist, setCodelist ] = React.useState<ICode[] | null>(null)\r\n    const [ codelistPending, setCodelistPending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        if (!codelistPending) {\r\n            return\r\n        }\r\n        let active = true\r\n        fetchCodelist({})\r\n            .then((codelist) => {\r\n                if (active) {\r\n                    setCodelist(codelist)\r\n                    setCodelistPending(false)\r\n                }\r\n            })\r\n        ;\r\n        return () => {\r\n            active = false\r\n        }\r\n    }, [codelistPending])\r\n\r\n    return (\r\n        <>\r\n\r\n            {/*<AppBar position=\"sticky\" color=\"transparent\" elevation={0}>*/}\r\n            {/*    <Container maxWidth={false}>*/}\r\n            {/*        <Toolbar disableGutters>*/}\r\n            {/*            COVIDCODE*/}\r\n            {/*        </Toolbar>*/}\r\n            {/*    </Container>*/}\r\n            {/*</AppBar>*/}\r\n\r\n            <Header color=\"transparent\" elevation={0}/>\r\n\r\n            {codePending && (\r\n                <div>...</div>\r\n            )}\r\n\r\n            {code && (\r\n                <main className={classes.main}>\r\n\r\n                    {code.imageUrl && (\r\n                        <img className={classes.mainImage} src={code.imageUrl} alt=\"\"/>\r\n                    )}\r\n\r\n                </main>\r\n            )}\r\n\r\n            <div className={classes.foot}>\r\n                <Toolbar className={classes.footToolbar} disableGutters>\r\n                    {codelist && codelist.length > 1 && (\r\n                        <Tabs\r\n                            className={classes.footTabs}\r\n                            centered\r\n                            variant=\"scrollable\"\r\n                            scrollButtons={false}\r\n                            value={id}\r\n                        >\r\n                            {codelist.map((code) => (\r\n                                <Tab\r\n                                    key={code.id}\r\n                                    className={classes.footTab}\r\n                                    label={code.name}\r\n                                    value={code.id}\r\n                                    component={NavLink}\r\n                                    to={`/codes/code/${code.id}`}\r\n                                    replace\r\n                                />\r\n                            ))}\r\n                        </Tabs>\r\n                    )}\r\n                </Toolbar>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { createStyles } from '@mui/styles'\r\nimport { Theme } from '@mui/material'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n\r\n    },\r\n\r\n    progressContainer: {\r\n        position: 'relative',\r\n    },\r\n    progress: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n    },\r\n\r\n    main: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n\r\n    foot: {\r\n        pointerEvents: 'none',\r\n        position: 'sticky',\r\n        bottom: 0,\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        padding: 32,\r\n        '& > *': {\r\n            pointerEvents: 'all',\r\n        }\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import { createStyles } from '@mui/styles'\r\nimport { Theme } from '@mui/material'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@mui/styles/makeStyles'\r\nimport styles from './CodelistItem.styles'\r\n\r\nimport { ICode } from '../../../codes/services/CodesService'\r\nimport { useHistory, useRouteMatch } from 'react-router-dom'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemButton from '@mui/material/ListItemButton'\r\nimport ListItemText from '@mui/material/ListItemText'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\r\nimport Menu from '@mui/material/Menu'\r\nimport MenuItem from '@mui/material/MenuItem'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: CodelistItem.name,\r\n})\r\n\r\nexport interface ICodelistItemProps {\r\n    item: ICode\r\n}\r\n\r\nexport default function CodelistItem(props: ICodelistItemProps) {\r\n    const classes = useStyles(props)\r\n\r\n    const { item } = props\r\n\r\n    const [ menuOpen, setMenuOpen ] = React.useState(false)\r\n    const menuAnchorRef = React.useRef<HTMLButtonElement>(null)\r\n\r\n    const routeMatch = useRouteMatch()\r\n\r\n    return (\r\n        <>\r\n\r\n            <ListItem\r\n                disablePadding\r\n                secondaryAction={(\r\n                    <IconButton\r\n                        ref={menuAnchorRef}\r\n                        aria-label=\"comments\"\r\n                        edge=\"end\"\r\n                        onClick={() => setMenuOpen(true)}\r\n                    >\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                )}\r\n            >\r\n                <ListItemButton\r\n                    component={NavLink}\r\n                    to={`/codes/code/${item.id}`}\r\n                >\r\n                    <ListItemText primary={item.name || item.id} />\r\n                </ListItemButton>\r\n            </ListItem>\r\n\r\n            {menuAnchorRef.current && (\r\n                <Menu\r\n                    anchorEl={menuAnchorRef.current}\r\n                    open={menuOpen}\r\n                    onClose={() => setMenuOpen(false)}\r\n                >\r\n\r\n                    <MenuItem\r\n                        component={NavLink}\r\n                        to={`${routeMatch.path}/${item.id}/update`}\r\n                        onClick={() => setMenuOpen(false)}\r\n                    >\r\n                        ИЗМЕНИТЬ\r\n                    </MenuItem>\r\n\r\n                    <MenuItem\r\n                        component={NavLink}\r\n                        to={`${routeMatch.path}/${item.id}/delete`}\r\n                        onClick={() => setMenuOpen(false)}\r\n                    >\r\n                        УДАЛИТЬ\r\n                    </MenuItem>\r\n\r\n                </Menu>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n","import { createStyles } from '@mui/styles'\r\nimport { Theme } from '@mui/material'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    hidden: {\r\n        position: 'absolute',\r\n        visibility: 'hidden',\r\n        width: 1,\r\n        height: 1,\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@mui/styles/makeStyles'\r\nimport styles from './FileField.styles'\r\n\r\nimport TextField, { StandardTextFieldProps, FilledTextFieldProps, OutlinedTextFieldProps } from '@mui/material/TextField'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport UploadIcon from '@mui/icons-material/Upload'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: FileField.name,\r\n})\r\n\r\nexport interface IStandardFileFieldProps extends StandardTextFieldProps {\r\n    onChangeValue: (value?: string) => void\r\n}\r\n\r\nexport interface IFilledFileFieldProps extends FilledTextFieldProps {\r\n    onChangeValue: (value?: string) => void\r\n}\r\n\r\nexport interface IOutlinedFileFieldProps extends OutlinedTextFieldProps {\r\n    onChangeValue: (value?: string) => void\r\n}\r\n\r\nexport type IFileFieldProps = IStandardFileFieldProps | IFilledFileFieldProps | IOutlinedFileFieldProps\r\n\r\nexport default function FileField(props: IFileFieldProps) {\r\n    const classes = useStyles(props)\r\n\r\n    const { classes:_, value, onChangeValue, ...otherProps } = props\r\n    const { hidden:__, ...otherClasses } = classes\r\n\r\n    const fileInputRef = React.useRef<HTMLInputElement>(null)\r\n\r\n    const displayValue = React.useMemo(() => {\r\n        if (props.value && typeof props.value === 'string') {\r\n            return props.value.substring(0, 300) + '...'\r\n        }\r\n    }, [props.value])\r\n\r\n    return (\r\n        <>\r\n\r\n            <TextField\r\n                {...otherProps}\r\n                classes={otherClasses}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <IconButton\r\n                            disabled={props.disabled}\r\n                            onClick={() => {\r\n                                if (fileInputRef.current) {\r\n                                    fileInputRef.current.click()\r\n                                }\r\n                            }}\r\n                        >\r\n                            <UploadIcon/>\r\n                        </IconButton>\r\n                    ),\r\n                }}\r\n                value={displayValue || ''}\r\n                onChange={props.onChange}\r\n            />\r\n\r\n            <input\r\n                ref={fileInputRef}\r\n                className={classes.hidden}\r\n                type=\"file\"\r\n                onInput={(event) => {\r\n                    if (fileInputRef.current) {\r\n                        const files = fileInputRef.current.files\r\n                        if (files && files.length) {\r\n                            const file = files[0]\r\n                            const reader = new FileReader()\r\n                            reader.onloadend = () => {\r\n                                onChangeValue(reader.result ? reader.result as string : undefined)\r\n                            }\r\n                            reader.readAsDataURL(file)\r\n                        }\r\n                    }\r\n                }}\r\n                tabIndex={-1}\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { ICode } from '../../../codes/services/CodesService'\r\n\r\nimport TextField from '@mui/material/TextField'\r\nimport FileField from '../../../../components/FileField/FileField'\r\n\r\nexport interface ICodelistItemFormProps {\r\n    data: Partial<ICode>\r\n    onChangeData: (data: Partial<ICode>) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport default function CodelistItemForm(props: ICodelistItemFormProps) {\r\n    const { data, onChangeData, disabled } = props\r\n\r\n    return (\r\n        <form>\r\n\r\n            <TextField\r\n                label=\"Название (чем короче, тем лучше)\"\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                disabled={disabled}\r\n                value={data.name || ''}\r\n                onChange={({ target:{ value }}) => {\r\n                    onChangeData({ ...data, name:value })\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n                label=\"Адрес страницы на Госуслугах\"\r\n                name=\"url\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                disabled={disabled}\r\n                value={data.url || ''}\r\n                onChange={({ target:{ value }}) => {\r\n                    onChangeData({ ...data, url:value })\r\n                }}\r\n            />\r\n\r\n            <FileField\r\n                label=\"Адрес изображения\"\r\n                name=\"url\"\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                disabled={disabled}\r\n                value={data.imageUrl || ''}\r\n                onChangeValue={(value) => {\r\n                    onChangeData({ ...data, imageUrl:value })\r\n                }}\r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { createCode, ICode } from '../../../../codes/services/CodesService'\r\n\r\nimport Dialog from '@mui/material/Dialog'\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport Container from '@mui/material/Container'\r\nimport CodelistItemForm from '../../CodelistItemForm/CodelistItemForm'\r\nimport Button from '@mui/material/Button'\r\n\r\nexport interface ICreateItemProps {\r\n    onClose: () => void\r\n    onSuccess: (code: ICode) => void\r\n}\r\n\r\nexport default function CreateItem(props: ICreateItemProps) {\r\n    const { onClose, onSuccess } = props\r\n\r\n    const [ data, setData ] = React.useState<Partial<ICode>>({})\r\n\r\n    const [ submitPending, setSubmitPending ] = React.useState(false)\r\n\r\n    const handleSubmit = () => {\r\n        setSubmitPending(true)\r\n        createCode(data)\r\n            .then((code) => {\r\n                onSuccess(code)\r\n            })\r\n        ;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open\r\n            onClose={onClose}\r\n            fullScreen\r\n        >\r\n            <AppBar position=\"sticky\" color=\"default\">\r\n                <Toolbar>\r\n                    -\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Container maxWidth=\"md\">\r\n\r\n                <CodelistItemForm\r\n                    data={data}\r\n                    onChangeData={setData}\r\n                    disabled={submitPending}\r\n                />\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    disabled={submitPending}\r\n                    onClick={handleSubmit}\r\n                >\r\n                    Сохранить\r\n                </Button>\r\n\r\n            </Container>\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useParams } from 'react-router-dom'\r\nimport { fetchCode, updateCode, ICode } from '../../../../codes/services/CodesService'\r\n\r\nimport Dialog from '@mui/material/Dialog'\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport Container from '@mui/material/Container'\r\nimport CodelistItemForm from '../../CodelistItemForm/CodelistItemForm'\r\nimport Button from '@mui/material/Button'\r\n\r\nexport interface IUpdateItemProps {\r\n    onClose: () => void\r\n    onSuccess: (code: ICode) => void\r\n}\r\n\r\nexport default function UpdateItem(props: IUpdateItemProps) {\r\n    const { onClose, onSuccess } = props\r\n\r\n    const { id } = useParams<{ id:string }>()\r\n\r\n    const [ code, setCode ] = React.useState<Partial<ICode> | null>()\r\n    const [ codePending, setCodePending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        setCodePending(true)\r\n        fetchCode(id)\r\n            .then((code) => {\r\n                setCode(code)\r\n                setCodePending(false)\r\n            })\r\n        ;\r\n    }, [id])\r\n\r\n    const [ submitPending, setSubmitPending ] = React.useState(false)\r\n\r\n    const handleSubmit = () => {\r\n        if (!code) {\r\n            return\r\n        }\r\n        setSubmitPending(true)\r\n        updateCode(id, code)\r\n            .then((code) => {\r\n                onSuccess(code)\r\n            })\r\n        ;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open\r\n            onClose={onClose}\r\n            fullScreen\r\n        >\r\n            <AppBar position=\"sticky\" color=\"default\">\r\n                <Toolbar>\r\n                    -\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            {code && (\r\n                <Container maxWidth=\"md\">\r\n\r\n                    <CodelistItemForm\r\n                        data={code}\r\n                        onChangeData={setCode}\r\n                        disabled={submitPending}\r\n                    />\r\n\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        disabled={submitPending}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        Сохранить\r\n                    </Button>\r\n\r\n                </Container>\r\n            )}\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useParams } from 'react-router-dom'\r\nimport { deleteCode, ICode } from '../../../../codes/services/CodesService'\r\n\r\nimport Dialog from '@mui/material/Dialog'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogContentText from '@mui/material/DialogContentText'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport Button from '@mui/material/Button'\r\n\r\nexport interface IDeleteItemProps {\r\n    onClose: () => void\r\n    onSuccess: () => void\r\n}\r\n\r\nexport default function DeleteItem(props: IDeleteItemProps) {\r\n    const { onClose, onSuccess } = props\r\n\r\n    const { id } = useParams<{ id:string }>()\r\n\r\n    const handleConfirm = () => {\r\n        deleteCode(id)\r\n            .then(() => {\r\n                onSuccess()\r\n            })\r\n        ;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={true}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                Удаление кода\r\n            </DialogTitle>\r\n\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Действительно удалить код?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n\r\n                <Button\r\n                    onClick={onClose}\r\n                    autoFocus\r\n                >\r\n                    Отмена\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={handleConfirm}\r\n                >\r\n                    Удалить\r\n                </Button>\r\n\r\n            </DialogActions>\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport makeStyles from '@mui/styles/makeStyles'\r\nimport styles from './Codelist.styles'\r\n\r\nimport { fetchCodelist, ICode } from '../../../codes/services/CodesService'\r\nimport { useHistory, useRouteMatch } from 'react-router-dom'\r\n\r\nimport Header from '../../../../components/Header/Header'\r\nimport LinearProgress from '@mui/material/LinearProgress'\r\nimport List from '@mui/material/List'\r\nimport CodelistItem from '../CodelistItem/CodelistItem'\r\nimport Fab from '@mui/material/Fab'\r\nimport AddIcon from '@mui/icons-material/Add'\r\n\r\nimport CreateItem from '../CodelistTool/CreateItem/CreateItem'\r\nimport UpdateItem from '../CodelistTool/UpdateItem/UpdateItem'\r\nimport DeleteItem from '../CodelistTool/DeleteItem/DeleteItem'\r\n\r\nimport { Switch, Route, NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Codelist.name,\r\n})\r\n\r\nexport default function Codelist() {\r\n    const classes = useStyles()\r\n\r\n    const [ codelist, setCodelist ] = React.useState<ICode[] | null>(null)\r\n    const [ codelistPending, setCodelistPending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        if (!codelistPending) {\r\n            return\r\n        }\r\n        let active = true\r\n        fetchCodelist({})\r\n            .then((codelist) => {\r\n                if (active) {\r\n                    setCodelist(codelist)\r\n                    setCodelistPending(false)\r\n                }\r\n            })\r\n        ;\r\n        return () => {\r\n            active = false\r\n        }\r\n    }, [codelistPending])\r\n\r\n    const history = useHistory()\r\n    const routeMatch = useRouteMatch()\r\n\r\n    return (\r\n        <>\r\n\r\n            <Header/>\r\n\r\n            {codelistPending && (\r\n                <div className={classes.progressContainer}>\r\n                    <LinearProgress className={classes.progress} color=\"secondary\"/>\r\n                </div>\r\n            )}\r\n\r\n            <div className={classes.main}>\r\n                {codelist && (\r\n                    <List>\r\n                        {codelist.map((item) => (\r\n                            <CodelistItem\r\n                                key={item.id}\r\n                                item={item}\r\n                            />\r\n                        ))}\r\n                    </List>\r\n                )}\r\n            </div>\r\n\r\n            <div className={classes.foot}>\r\n                <Fab\r\n                    color=\"primary\"\r\n                    component={NavLink}\r\n                    to={`${routeMatch.url}/create`}\r\n                >\r\n                    <AddIcon/>\r\n                </Fab>\r\n            </div>\r\n\r\n            <Switch>\r\n\r\n                <Route path={`${routeMatch.path}/create`}>\r\n                    <CreateItem\r\n                        onClose={() => {\r\n                            history.goBack()\r\n                        }}\r\n                        onSuccess={() => {\r\n                            history.goBack()\r\n                            setCodelistPending(true)\r\n                        }}\r\n                    />\r\n                </Route>\r\n\r\n                <Route path={`${routeMatch.path}/:id/update`}>\r\n                    <UpdateItem\r\n                        onClose={() => {\r\n                            history.goBack()\r\n                        }}\r\n                        onSuccess={() => {\r\n                            history.goBack()\r\n                            setCodelistPending(true)\r\n                        }}\r\n                    />\r\n                </Route>\r\n\r\n                <Route path={`${routeMatch.path}/:id/delete`}>\r\n                    <DeleteItem\r\n                        onClose={() => {\r\n                            history.goBack()\r\n                        }}\r\n                        onSuccess={() => {\r\n                            history.goBack()\r\n                            setCodelistPending(true)\r\n                        }}\r\n                    />\r\n                </Route>\r\n\r\n            </Switch>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport makeStyles from '@mui/styles/makeStyles'\r\nimport styles from './Codes.styles'\r\n\r\nimport { fetchCurrentCodeId, ICode } from '../../services/CodesService'\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport Code from '../../../codes-code/components/Code/Code'\r\nimport Codelist from '../../../codes-codelist/components/Codelist/Codelist'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Codes.name,\r\n})\r\n\r\nexport default function Codes() {\r\n    const classes = useStyles()\r\n\r\n    const [ currentCodeId, setCurrentCodeId ] = React.useState<string | null>(null)\r\n    const [ currentCodeIdPending, setCurrentCodeIdPending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        fetchCurrentCodeId()\r\n            .then((currentCodeId) => {\r\n                setCurrentCodeId(currentCodeId)\r\n                setCurrentCodeIdPending(false)\r\n            })\r\n        ;\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n\r\n            {!currentCodeIdPending && (\r\n                <Switch>\r\n\r\n                    <Route path=\"/codes/codelist\" component={Codelist}/>\r\n\r\n                    <Route path=\"/codes/code/:id\" component={Code}/>\r\n\r\n                    {currentCodeId ? (\r\n                        <Redirect to={`/codes/code/${currentCodeId}`}/>\r\n                    ) : (\r\n                        <Redirect to={`/codes/codelist`}/>\r\n                    )}\r\n\r\n                </Switch>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n","import { createStyles } from '@mui/styles'\r\nimport { Theme } from '@mui/material'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@mui/styles/makeStyles'\r\nimport styles from './Config.styles'\r\n\r\nimport { fetchConfig, IConfig } from '../../services/ConfigService'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Config.name,\r\n})\r\n\r\nexport default function Config() {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n\r\n            config\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport reportWebVitals from './reportWebVitals'\nimport { StyledEngineProvider } from '@mui/material/styles'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './theme'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport Codes from './modules/codes/components/Codes/Codes'\nimport Config from './modules/config/containers/Config/Config'\n\nReactDOM.render(\n    <React.StrictMode>\n        <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={theme}>\n                <CssBaseline/>\n                <HashRouter>\n                    <Switch>\n\n                        <Route path=\"/codes\" component={Codes}/>\n\n                        <Route path=\"/config\" component={Config}/>\n\n                        <Redirect to=\"/codes\"/>\n\n                    </Switch>\n                </HashRouter>\n            </ThemeProvider>\n        </StyledEngineProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}