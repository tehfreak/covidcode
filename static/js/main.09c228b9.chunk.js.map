{"version":3,"sources":["serviceWorkerRegistration.ts","reportWebVitals.ts","theme.ts","modules/codes/components/Codes/Codes.styles.ts","modules/codes/services/CodesService.ts","modules/codes-code/components/Code/Code.styles.ts","components/Header/Header.styles.ts","components/Header/Header.tsx","modules/codes-code/components/Code/Code.tsx","modules/codes-codelist/components/Codelist/Codelist.styles.ts","modules/codes-codelist/components/CodelistItem/CodelistItem.styles.ts","modules/codes-codelist/components/CodelistItem/CodelistItem.tsx","components/PageDialog/PageDialog.styles.ts","components/PageDialog/PageDialog.tsx","components/PageDialog/PageDialogHeader.styles.ts","components/PageDialog/PageDialogHeader.tsx","modules/codes-codelist/components/CodelistItemForm/CodelistItemForm.styles.ts","components/FileField/FileField.tsx","components/DateField/DateField.styles.ts","components/DateField/DateField.tsx","modules/codes-codelist/components/CodelistItemForm/CodelistItemForm.tsx","modules/codes-codelist/components/CodelistTool/CreateItem/CreateItem.tsx","modules/codes-codelist/components/CodelistTool/UpdateItem/UpdateItem.tsx","modules/codes-codelist/components/CodelistTool/DeleteItem/DeleteItem.tsx","modules/codes-codelist/components/Codelist/Codelist.tsx","modules/codes/components/Codes/Codes.tsx","modules/config/containers/Config/Config.styles.ts","modules/config/containers/Config/Config.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","styles","createStyles","root","flexGrow","height","display","flexDirection","main","alignItems","justifyContent","nav","CODELIST","id","name","fetchCodelist","query","a","codelist","localStorage","getItem","JSON","parse","undefined","filter","code","fetchCode","data","Error","uuid","push","setItem","stringify","map","existsCode","i","findIndex","length","mainImage","foot","position","bottom","footToolbar","footTabs","footTab","header","headerMenu","marginRight","menuAvatar","marginLeft","menuListItem","paddingLeft","paddingRight","menuListItemIcon","minWidth","useStyles","makeStyles","Header","props","classes","color","elevation","React","useState","menuOpen","setMenuOpen","AppBar","Container","maxWidth","Toolbar","disableGutters","IconButton","className","edge","onClick","Typography","variant","Drawer","anchor","open","onClose","Avatar","alt","src","process","List","ListItem","button","component","NavLink","to","ListItemIcon","SvgIcon","fill","d","ListItemText","primary","Code","useParams","useEffect","putCurrentCodeId","setCode","codePending","setCodePending","setCodelist","codelistPending","setCodelistPending","active","imageUrl","Tabs","value","Tab","label","replace","progressContainer","progress","width","pointerEvents","padding","status","status_valid","palette","success","dark","status_invalid","CodelistItem","item","onMoveUpward","onMoveDownward","menuAnchorRef","useRef","routeMatch","useRouteMatch","useMemo","expiredAt","compareAsc","Date","clsx","disableTypography","url","secondary","ListItemSecondaryAction","ref","current","anchorEl","MenuItem","path","PageDialog","children","Dialog","fullScreen","back","spacing","PageDialogHeader","form","paddingTop","paddingBottom","fieldContainer","FileField","onChangeValue","otherProps","fileInputRef","displayValue","substring","TextField","InputProps","endAdornment","disabled","click","onChange","type","onInput","files","file","reader","FileReader","onloadend","result","readAsDataURL","tabIndex","hidden","visibility","DateField","CodelistItemForm","onChangeData","fullWidth","target","toJSON","CreateItem","setData","submitPending","setSubmitPending","Button","createCode","UpdateItem","updateCode","DeleteItem","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","deleteCode","Codelist","history","useHistory","LinearProgress","moveCodeUpward","moveCodeDownward","Fab","goBack","Codes","currentCodeId","setCurrentCodeId","currentCodeIdPending","setCurrentCodeIdPending","fetchCurrentCodeId","Config","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"0KAYMA,G,OAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,4DA0CnC,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,+GAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MCjGjE,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kBCPDO,EAAQC,YAAY,I,2DCwBlBC,EAxBA,SAACF,GAAD,OAAkBG,YAAa,CAE1CC,KAAM,CACFC,SAAU,EACVC,OAAQ,EACRC,QAAS,OACTC,cAAe,UAGnBC,KAAM,CACFJ,SAAU,EACVC,OAAQ,EACRC,QAAS,OACTC,cAAe,SACfE,WAAY,SACZC,eAAgB,UAGpBC,IAAK,M,0CClBHC,EAAW,CAAC,CAAEC,GAAG,IAAKC,KAAK,QAe1B,SAAeC,EAAtB,kC,4CAAO,WAA6BC,GAA7B,eAAAC,EAAA,6DAGCC,EADAC,aAAaC,QAAQ,YACVC,KAAKC,MAAMH,aAAaC,QAAQ,aAEhCR,EAEXI,QACiBO,IAAbP,EAAMH,KACNK,EAAWA,EAASM,QAAO,SAACC,GAAD,OAAUA,EAAKZ,KAAOG,EAAMH,OAT5D,kBAeIK,GAfJ,4C,sBAkBA,SAAeQ,EAAtB,kC,4CAAO,WAAyBb,GAAzB,mBAAAI,EAAA,sEACoBF,EAAc,CAAEF,OADpC,0CACKY,EADL,uBAEIA,GAAQ,MAFZ,4C,kEAKA,WAA0BE,GAA1B,iBAAAV,EAAA,yDACEU,EAAKb,KADP,sBAEOc,QAFP,cAIGH,EAJH,2BAKIE,GALJ,IAMCd,GAAIgB,cACJf,KAAMa,EAAKb,QAETI,EAAoBC,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAgB,IACpGU,KAAKL,GACdN,aAAaY,QAAQ,WAAYV,KAAKW,UAAUd,IAX7C,kBAYIO,GAZJ,4C,kEAeA,WAA0BZ,EAAYc,GAAtC,iBAAAV,EAAA,yDACEU,EAAKb,KADP,sBAEOc,QAFP,cAIGH,EAJH,2BAKIE,GALJ,IAMCd,KACAC,KAAMa,EAAKb,OAGfI,GADIA,EAAoBC,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAgB,IACvFa,KAAI,SAACC,GAAD,OAAgBA,EAAWrB,KAAOA,EAAKqB,EAAaT,KAC5EN,aAAaY,QAAQ,WAAYV,KAAKW,UAAUd,IAX7C,kBAYIO,GAZJ,4C,kEAeA,WAA0BZ,GAA1B,eAAAI,EAAA,sDAEHC,GADIA,EAAoBC,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAgB,IACvFI,QAAO,SAACC,GAAD,OAAUA,EAAKZ,KAAOA,KACjDM,aAAaY,QAAQ,WAAYV,KAAKW,UAAUd,IAH7C,4C,kEAMA,WAA8BL,GAA9B,mBAAAI,EAAA,sDACCC,EAAoBC,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAgB,IACrGe,EAAIjB,EAASkB,WAAU,SAAAX,GAAI,OAAIA,EAAKZ,KAAOA,MACzC,IAAI,EACuB,CAACK,EAASiB,GAAIjB,EAASiB,EAAE,IAAvDjB,EAASiB,EAAE,GADL,KACSjB,EAASiB,GADlB,MAGXhB,aAAaY,QAAQ,WAAYV,KAAKW,UAAUd,IAN7C,4C,kEASA,WAAgCL,GAAhC,mBAAAI,EAAA,sDACCC,EAAoBC,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAgB,IACrGe,EAAIjB,EAASkB,WAAU,SAAAX,GAAI,OAAIA,EAAKZ,KAAOA,MACzCK,EAASmB,OAAS,IAAI,EACK,CAACnB,EAASiB,GAAIjB,EAASiB,EAAE,IAAvDjB,EAASiB,EAAE,GADa,KACTjB,EAASiB,GADA,MAG7BhB,aAAaY,QAAQ,WAAYV,KAAKW,UAAUd,IAN7C,4C,kEASA,sBAAAD,EAAA,+EACIE,aAAaC,QAAQ,kBADzB,4C,kEAIA,WAAgCP,GAAhC,SAAAI,EAAA,sDACHE,aAAaY,QAAQ,gBAAiBlB,GADnC,4C,sBChGP,IAiCeZ,EAjCA,SAACF,GAAD,OAAkBG,YAAa,CAE1CC,KAAM,GAINK,KAAM,CACFJ,SAAU,EACVE,QAAS,OACTC,cAAe,SACfG,eAAgB,SAChBD,WAAY,UAEhB6B,UAAW,CACPhC,QAAS,SAGbiC,KAAM,CACFC,SAAU,SACVC,OAAQ,GAEZC,YAAa,CACThC,eAAgB,UAEpBiC,SAAU,GAGVC,QAAS,CACLvC,OAAQ,O,2BCJDJ,EAxBA,SAACF,GAAD,OAAkBG,YAAa,CAE1C2C,OAAQ,GAGRC,WAAY,CACRC,YAAa,IAGjBC,WAAY,CACRC,YAAa,GACbF,YAAa,IAGjBG,aAAc,CACVC,YAAa,GACbC,aAAc,IAElBC,iBAAkB,CACdC,SAAU,O,8HCAZC,GAAYC,IAAWvD,EAAQ,CACjCa,KAAM2C,GAAO3C,OAQF,SAAS2C,GAAOC,GAC3B,IAAMC,EAAUJ,KAERK,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,UAEf,EAAkCC,IAAMC,UAAS,GAAjD,mBAAQC,EAAR,KAAkBC,EAAlB,KAEA,OACI,uCAEI,eAACC,EAAA,EAAD,CAAQ1B,SAAS,SAASoB,MAAOA,EAAOC,UAAWA,EAAnD,SACI,eAACM,EAAA,EAAD,CAAWC,UAAU,EAArB,SACI,gBAACC,EAAA,EAAD,CAASC,gBAAc,EAAvB,UAEI,eAACC,EAAA,EAAD,CACIC,UAAWb,EAAQb,WACnBc,MAAM,UACNa,KAAK,QACLC,QAAS,kBAAMT,GAAY,IAJ/B,SAMI,eAAC,IAAD,MAGJ,eAACU,EAAA,EAAD,CAAYC,QAAQ,KAApB,8BAQZ,gBAACC,EAAA,EAAD,CACIC,OAAO,OACPC,KAAMf,EACNgB,QAAS,kBAAMf,GAAY,IAH/B,UAKI,eAACC,EAAA,EAAD,CAAQ1B,SAAS,SAASoB,MAAOA,EAAOC,UAAWA,EAAnD,SACI,eAACM,EAAA,EAAD,CAAWC,UAAU,EAArB,SACI,gBAACC,EAAA,EAAD,CAASC,gBAAc,EAAvB,UACI,eAACW,EAAA,EAAD,CAAQT,UAAWb,EAAQX,WAAYkC,IAAI,YAAYC,IAAKC,2BAC5D,eAACT,EAAA,EAAD,CAAYC,QAAQ,KAApB,8BAMZ,gBAACS,EAAA,EAAD,WAEI,gBAACC,EAAA,EAAD,CACId,UAAWb,EAAQT,aACnBqC,QAAM,EACNC,UAAWC,IACXC,GAAE,kBAJN,UAMI,eAACC,EAAA,EAAD,CAAcnB,UAAWb,EAAQN,iBAAjC,SACI,eAACuC,GAAA,EAAD,UAAS,uBAAMC,KAAK,eAAeC,EAAE,wFAEzC,eAACC,GAAA,EAAD,CAAcC,QAAQ,8IAG1B,gBAACV,EAAA,EAAD,CACId,UAAWb,EAAQT,aACnBqC,QAAM,EACNC,UAAWC,IACXC,GAAE,UAJN,UAMI,eAACC,EAAA,EAAD,CAAcnB,UAAWb,EAAQN,iBAAjC,SACI,eAACuC,GAAA,EAAD,UAEI,uBAAMC,KAAK,eAAeC,EAAE,sIAGpC,eAACC,GAAA,EAAD,CAAcC,QAAQ,uECzF9C,IAAMzC,GAAYC,IAAWvD,EAAQ,CACjCa,KAAMmF,GAAKnF,OAGA,SAASmF,KACpB,IAAMtC,EAAUJ,KAER1C,EAAOqF,cAAPrF,GAERiD,IAAMqC,WAAU,YJ4Eb,SAAP,2BI3EQC,CAAiBvF,KAClB,CAACA,IAEJ,MAA0BiD,IAAMC,WAAhC,mBAAQtC,EAAR,KAAc4E,EAAd,KACA,EAAwCvC,IAAMC,UAAS,GAAvD,mBAAQuC,EAAR,KAAqBC,EAArB,KAEAzC,IAAMqC,WAAU,WACZI,GAAe,GACf7E,EAAUb,GACLpC,MAAK,SAACgD,GACH4E,EAAQ5E,GACR8E,GAAe,QAGxB,CAAC1F,IAEJ,MAAkCiD,IAAMC,SAAyB,MAAjE,mBAAQ7C,EAAR,KAAkBsF,EAAlB,KACA,EAAgD1C,IAAMC,UAAS,GAA/D,mBAAQ0C,EAAR,KAAyBC,EAAzB,KAoBA,OAlBA5C,IAAMqC,WAAU,WACZ,GAAKM,EAAL,CAGA,IAAIE,GAAS,EASb,OARA5F,EAAc,IACTtC,MAAK,SAACyC,GACCyF,IACAH,EAAYtF,GACZwF,GAAmB,OAIxB,WACHC,GAAS,MAEd,CAACF,IAGA,uCAUI,eAAChD,GAAD,CAAQG,MAAM,cAAcC,UAAW,IAEtCyC,GACG,uCAGH7E,GACG,uBAAM+C,UAAWb,EAAQnD,KAAzB,SAEKiB,EAAKmF,UACF,sBAAKpC,UAAWb,EAAQrB,UAAW6C,IAAK1D,EAAKmF,SAAU1B,IAAI,OAMvE,sBAAKV,UAAWb,EAAQpB,KAAxB,SACI,eAAC8B,EAAA,EAAD,CAASG,UAAWb,EAAQjB,YAAa4B,gBAAc,EAAvD,SACKpD,GAAYA,EAASmB,OAAS,GAC3B,eAACwE,EAAA,EAAD,CACIrC,UAAWb,EAAQhB,SACnBiC,QAAQ,aACRkC,MAAOjG,EAHX,SAKKK,EAASe,KAAI,SAACR,GAAD,OACV,eAACsF,EAAA,EAAD,CAEIvC,UAAWb,EAAQf,QACnBoE,MAAOvF,EAAKX,KACZgG,MAAOrF,EAAKZ,GACZ2E,UAAWC,IACXC,GAAE,sBAAiBjE,EAAKZ,IACxBoG,SAAO,GANFxF,EAAKZ,gBC/F9C,IAkCeZ,GAlCA,SAACF,GAAD,OAAkBG,YAAa,CAE1CC,KAAM,GAIN+G,kBAAmB,CACf1E,SAAU,YAEd2E,SAAU,CACN3E,SAAU,WACV4E,MAAO,QAGX5G,KAAM,CACFJ,SAAU,EACVE,QAAS,OACTC,cAAe,UAGnBgC,KAAM,CACF8E,cAAe,OACf7E,SAAU,SACVC,OAAQ,EACRnC,QAAS,OACTI,eAAgB,WAChB4G,QAAS,GACT,QAAS,CACLD,cAAe,W,UCPZpH,GArBA,SAACF,GAEZ,OADAd,QAAQC,IAAI,MAAOa,GACZG,YAAa,CAEhBC,KAAM,GAINoH,OAAQ,GAGRC,aAAc,CACV5D,MAAO7D,EAAM0H,QAAQC,QAAQC,MAEjCC,eAAgB,CACZhE,MAAO7D,EAAM0H,QAAQnI,MAAMqI,S,yJCQjCpE,GAAYC,IAAWvD,GAAQ,CACjCa,KAAM+G,GAAa/G,OASR,SAAS+G,GAAanE,GACjC,IAAMC,EAAUJ,GAAUG,GAElBoE,EAAuCpE,EAAvCoE,KAAMC,EAAiCrE,EAAjCqE,aAAcC,EAAmBtE,EAAnBsE,eAE5B,EAAkClE,IAAMC,UAAS,GAAjD,mBAAQC,EAAR,KAAkBC,EAAlB,KACMgE,EAAgBnE,IAAMoE,OAA0B,MAEhDC,EAAaC,cAEbb,EAASzD,IAAMuE,SAAQ,WACzB,OAAIP,EAAKQ,UACDC,aAAW,IAAIC,KAAKV,EAAKQ,WAAY,IAAIE,MAAQ,EAE7C,eAAC7D,EAAA,EAAD,CAAYH,UAAWiE,aAAK9E,EAAQ4D,OAAQ5D,EAAQ6D,cAAe5C,QAAQ,QAA3E,sFAMA,eAACD,EAAA,EAAD,CAAYH,UAAWiE,aAAK9E,EAAQ4D,OAAQ5D,EAAQiE,gBAAiBhD,QAAQ,QAA7E,oEAOJ,eAACD,EAAA,EAAD,CAAYH,UAAWiE,aAAK9E,EAAQ4D,QAAS3D,MAAM,gBAAgBgB,QAAQ,QAA3E,2IAKT,CAACkD,IAEJ,OACI,uCAEI,gBAACxC,EAAA,EAAD,CACIC,QAAM,EACNC,UAAWC,IACXC,GAAE,sBAAiBoC,EAAKjH,IAH5B,UAKI,eAACkF,GAAA,EAAD,CACI2C,mBAAiB,EACjB1C,QACI,uCACI,eAACrB,EAAA,EAAD,CAAYC,QAAQ,QAAQhB,MAAM,cAAc4B,UAAU,OAA1D,SAAkEsC,EAAKhH,OAD3E,IAC8F,eAAC6D,EAAA,EAAD,CAAYC,QAAQ,QAAQhB,MAAM,gBAAgB4B,UAAU,OAA5D,SAAoEsC,EAAKa,KAAO,SAGlLC,UAAWrB,IAEf,eAACsB,GAAA,EAAD,UACI,eAACtE,EAAA,EAAD,CACIuE,IAAKb,EACL,aAAW,WACXxD,KAAK,MACLC,QAAS,kBAAMT,GAAY,IAJ/B,SAMI,eAAC,KAAD,WAKXgE,EAAcc,SACX,gBAAC,KAAD,CACIC,SAAUf,EAAcc,QACxBhE,KAAMf,EACNgB,QAAS,kBAAMf,GAAY,IAH/B,UAMI,gBAACgF,GAAA,EAAD,CACIvE,QAAS,WAAQT,GAAY,GAAQ8D,KADzC,UAGI,eAACpC,EAAA,EAAD,UACI,eAAC,KAAD,MAEJ,eAACI,GAAA,EAAD,CACIC,QAAQ,mGAIhB,gBAACiD,GAAA,EAAD,CACIvE,QAAS,WAAQT,GAAY,GAAQ+D,KADzC,UAGI,eAACrC,EAAA,EAAD,UACI,eAAC,KAAD,MAEJ,eAACI,GAAA,EAAD,CACIC,QAAQ,mGAIhB,gBAACiD,GAAA,EAAD,CACIzD,UAAWC,IACXC,GAAE,UAAKyC,EAAWe,KAAhB,YAAwBpB,EAAKjH,GAA7B,WACF6D,QAAS,kBAAMT,GAAY,IAH/B,UAKI,eAAC0B,EAAA,EAAD,UACI,eAAC,KAAD,MAEJ,eAACI,GAAA,EAAD,CACIC,QAAQ,wDAIhB,gBAACiD,GAAA,EAAD,CACIzD,UAAWC,IACXC,GAAE,UAAKyC,EAAWe,KAAhB,YAAwBpB,EAAKjH,GAA7B,WACF6D,QAAS,kBAAMT,GAAY,IAH/B,UAKI,eAAC0B,EAAA,EAAD,UACI,eAAC,KAAD,MAEJ,eAACI,GAAA,EAAD,CACIC,QAAQ,wD,mCC3IrB/F,GARA,SAACF,GAAD,OAAkBG,YAAa,CAE1CC,KAAM,M,UCEJoD,GAAYC,IAAWvD,GAAQ,CACjCa,KAAMqI,GAAWrI,OASN,SAASqI,GAAWzF,GACfH,KAAhB,IAEQwB,EAA4BrB,EAA5BqB,KAAMC,EAAsBtB,EAAtBsB,QAASoE,EAAa1F,EAAb0F,SAEvB,OACI,eAACC,GAAA,EAAD,CACItE,KAAMA,EACNC,QAASA,EACTsE,YAAU,EAHd,SAKKF,ICzBb,IAQenJ,GARA,SAACF,GAAD,OAAkBG,YAAa,CAE1CqJ,KAAM,CACFxG,YAAahD,EAAMyJ,QAAQ,S,qBCM7BjG,GAAYC,IAAWvD,GAAQ,CACjCa,KAAM2I,GAAiB3I,OAQZ,SAAS2I,GAAiB/F,GACrC,IAAMC,EAAUJ,KAERyB,EAAsBtB,EAAtBsB,QAASoE,EAAa1F,EAAb0F,SAEjB,OACI,eAAClF,EAAA,EAAD,CAAQ1B,SAAS,SAASoB,MAAM,UAAUC,UAAW,EAArD,SACI,eAACM,EAAA,EAAD,CAAWC,UAAU,EAArB,SACI,gBAACC,EAAA,EAAD,CAASC,gBAAc,EAAvB,UACI,eAACC,EAAA,EAAD,CACIC,UAAWb,EAAQ4F,KACnB9E,KAAK,QACLb,MAAM,UACNc,QAASM,EAJb,SAMI,eAAC,KAAD,MAEJ,eAACL,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACKwE,WCpCzB,IAcenJ,GAdA,SAACF,GAAD,OAAkBG,YAAa,CAE1CwJ,KAAM,CACFC,WAAY,GACZC,cAAe,IAGnBC,eAAgB,CACZF,WAAY,GACZC,cAAe,O,oECUR,SAASE,GAAUpG,GAEkBA,EAAxCoD,MAAR,IAAeiD,EAAiCrG,EAAjCqG,cAAkBC,EAAjC,aAAgDtG,EAAhD,IAEMuG,EAAenG,IAAMoE,OAAyB,MAE9CgC,EAAepG,IAAMuE,SAAQ,WAC/B,GAAI3E,EAAMoD,OAAgC,kBAAhBpD,EAAMoD,MAC5B,OAAOpD,EAAMoD,MAAMqD,UAAU,EAAG,KAAO,QAE5C,CAACzG,EAAMoD,QAEV,OACI,uCAEI,eAACsD,GAAA,EAAD,2BACQJ,GADR,IAEIK,WAAY,CACRC,aACI,eAAC/F,EAAA,EAAD,CACIgG,SAAU7G,EAAM6G,SAChB7F,QAAS,WACDuF,EAAalB,SACbkB,EAAalB,QAAQyB,SAJjC,SAQI,eAAC,KAAD,OAIZ1D,MAAOoD,GAAgB,GACvBO,SAAU/G,EAAM+G,YAGpB,wBACI3B,IAAKmB,EACLS,KAAK,OACLC,QAAS,WACL,GAAIV,EAAalB,QAAS,CACtB,IAAM6B,EAAQX,EAAalB,QAAQ6B,MACnC,GAAIA,GAASA,EAAMvI,OAAQ,CACvB,IAAMwI,EAAOD,EAAM,GACbE,EAAS,IAAIC,WACnBD,EAAOE,UAAY,WACfjB,EAAce,EAAOG,OAASH,EAAOG,YAAmB1J,IAE5DuJ,EAAOI,cAAcL,MAIjCM,UAAW,OCtE3B,IAWelL,GAXA,SAACF,GAAD,OAAkBG,YAAa,CAE1CkL,OAAQ,CACJ5I,SAAU,WACV6I,WAAY,SACZjE,MAAO,EACP/G,OAAQ,MCIVkD,GAAYC,IAAWvD,GAAQ,CACjCa,KAAMwK,GAAUxK,OASL,SAASwK,GAAU5H,GACdH,GAAUG,GAEcA,EAAhCsD,MAAgCtD,EAAzBoD,MAAyBpD,EAAlBqG,cAEtB,OAAO,KCjBX,IAAMxG,GAAYC,IAAWvD,GAAQ,CACjCa,KAAMyK,GAAiBzK,OASZ,SAASyK,GAAiB7H,GACrC,IAAMC,EAAUJ,KAER5B,EAAiC+B,EAAjC/B,KAAM6J,EAA2B9H,EAA3B8H,aAAcjB,EAAa7G,EAAb6G,SAE5B,OACI,wBAAM/F,UAAWb,EAAQ+F,KAAzB,UAEI,sBAAKlF,UAAWb,EAAQkG,eAAxB,SACI,eAACO,GAAA,EAAD,CACIpD,MAAM,gKACNlG,KAAK,OACL8D,QAAQ,WACR6G,WAAS,EACTlB,SAAUA,EACVzD,MAAOnF,EAAKb,MAAQ,GACpB2J,SAAU,YAA0B,IAAd3D,EAAa,EAAtB4E,OAAS5E,MAClB0E,EAAa,2BAAK7J,GAAN,IAAYb,KAAKgG,UAKzC,sBAAKtC,UAAWb,EAAQkG,eAAxB,SACI,eAACyB,GAAD,CACItE,MAAM,yFACNF,MAAOnF,EAAK2G,WAAa,KACzByB,cAAe,SAACjD,GACZ,IAAMwB,EAAYxB,EAAQA,EAAM6E,cAAWpK,EAC3CiK,EAAa,2BAAK7J,GAAN,IAAY2G,oBAKpC,sBAAK9D,UAAWb,EAAQkG,eAAxB,SACI,eAACO,GAAA,EAAD,CACIpD,MAAM,4JACNlG,KAAK,MACL8D,QAAQ,WACR6G,WAAS,EACTlB,SAAUA,EACVzD,MAAOnF,EAAKgH,KAAO,GACnB8B,SAAU,YAA0B,IAAd3D,EAAa,EAAtB4E,OAAS5E,MAClB0E,EAAa,2BAAK7J,GAAN,IAAYgH,IAAI7B,UAKxC,sBAAKtC,UAAWb,EAAQkG,eAAxB,SACI,eAACC,GAAD,CACI9C,MAAM,oGACNlG,KAAK,MACL8D,QAAQ,WACR6G,WAAS,EACTlB,SAAUA,EACVzD,MAAOnF,EAAKiF,UAAY,GACxBmD,cAAe,SAACjD,GACZ0E,EAAa,2BAAK7J,GAAN,IAAYiF,SAASE,a,cC7D1C,SAAS8E,GAAWlI,GAC/B,IAAQsB,EAAuBtB,EAAvBsB,QAAS5F,EAAcsE,EAAdtE,UAEjB,EAA0B0E,IAAMC,SAAyB,IAAzD,mBAAQpC,EAAR,KAAckK,EAAd,KAEA,EAA4C/H,IAAMC,UAAS,GAA3D,mBAAQ+H,EAAR,KAAuBC,EAAvB,KAWA,OACI,gBAAC5C,GAAD,CACIpE,MAAI,EACJC,QAASA,EAFb,UAKI,eAACyE,GAAD,CACIzE,QAASA,EADb,wNAMA,gBAACb,EAAA,EAAD,CAAWC,SAAS,KAApB,UAEI,eAACmH,GAAD,CACI5J,KAAMA,EACN6J,aAAcK,EACdtB,SAAUuB,IAGd,eAACE,GAAA,EAAD,CACIpH,QAAQ,YACR2F,SAAUuB,EACVpH,QAhCK,WACjBqH,GAAiB,GjBiBlB,SAAP,kCiBhBQE,CAAWtK,GACNlD,MAAK,SAACgD,GACHrC,EAAUqC,OAyBV,0ECnCD,SAASyK,GAAWxI,GAC/B,IAAQsB,EAAuBtB,EAAvBsB,QAAS5F,EAAcsE,EAAdtE,UAETyB,EAAOqF,cAAPrF,GAER,EAA0BiD,IAAMC,WAAhC,mBAAQtC,EAAR,KAAc4E,EAAd,KACA,EAAwCvC,IAAMC,UAAS,GAAvD,mBAAqBwC,GAArB,WAEAzC,IAAMqC,WAAU,WACZI,GAAe,GACf7E,EAAUb,GACLpC,MAAK,SAACgD,GACH4E,EAAQ5E,GACR8E,GAAe,QAGxB,CAAC1F,IAEJ,MAA4CiD,IAAMC,UAAS,GAA3D,mBAAQ+H,EAAR,KAAuBC,EAAvB,KAcA,OACI,gBAAC5C,GAAD,CACIpE,MAAI,EACJC,QAASA,EAFb,UAKI,eAACyE,GAAD,CACIzE,QAASA,EADb,yLAMCvD,GACG,gBAAC0C,EAAA,EAAD,CAAWC,SAAS,KAApB,UAEI,eAACmH,GAAD,CACI5J,KAAMF,EACN+J,aAAcnF,EACdkE,SAAUuB,IAGd,eAACE,GAAA,EAAD,CACIpH,QAAQ,YACR2F,SAAUuB,EACVpH,QApCC,WACZjD,IAGLsK,GAAiB,GlBelB,SAAP,oCkBdQI,CAAWtL,EAAIY,GACVhD,MAAK,SAACgD,GACHrC,EAAUqC,QA0BN,0E,4CCpDL,SAAS2K,GAAW1I,GAC/B,IAAQsB,EAAuBtB,EAAvBsB,QAAS5F,EAAcsE,EAAdtE,UAETyB,EAAOqF,cAAPrF,GAUR,OACI,gBAACwI,GAAA,EAAD,CACItE,MAAM,EACNC,QAASA,EACT,kBAAgB,qBAChB,mBAAiB,2BAJrB,UAOI,eAACqH,GAAA,EAAD,CAAaxL,GAAG,qBAAhB,uFAIA,eAACyL,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAmB1L,GAAG,2BAAtB,6JAKJ,gBAAC2L,GAAA,EAAD,WAEI,eAACR,GAAA,EAAD,CACItH,QAASM,EACTyH,WAAS,EAFb,kDAOA,eAACT,GAAA,EAAD,CACItH,QApCM,YnBgDnB,SAAP,mCmB/CQgI,CAAW7L,GACNpC,MAAK,WACFW,QAgCA,8DCrChB,IAAMmE,GAAYC,IAAWvD,GAAQ,CACjCa,KAAM6L,GAAS7L,OAGJ,SAAS6L,KACpB,IAAMhJ,EAAUJ,KAEhB,EAAkCO,IAAMC,SAAyB,MAAjE,mBAAQ7C,EAAR,KAAkBsF,EAAlB,KACA,EAAgD1C,IAAMC,UAAS,GAA/D,mBAAQ0C,EAAR,KAAyBC,EAAzB,KAEA5C,IAAMqC,WAAU,WACZ,GAAKM,EAAL,CAGA,IAAIE,GAAS,EASb,OARA5F,EAAc,IACTtC,MAAK,SAACyC,GACCyF,IACAH,EAAYtF,GACZwF,GAAmB,OAIxB,WACHC,GAAS,MAEd,CAACF,IAEJ,IAAMmG,EAAUC,cACV1E,EAAaC,cAEnB,OACI,uCAEI,eAAC3E,GAAD,IAECgD,GACG,sBAAKjC,UAAWb,EAAQuD,kBAAxB,SACI,eAAC4F,GAAA,EAAD,CAAgBtI,UAAWb,EAAQwD,SAAUvD,MAAM,gBAI3D,sBAAKY,UAAWb,EAAQnD,KAAxB,SACKU,GACG,eAACmE,EAAA,EAAD,UACKnE,EAASe,KAAI,SAAC6F,GAAD,OACV,eAACD,GAAD,CAEIC,KAAMA,EACNC,aAAc,YpBOvC,SAAP,mCoBNoCgF,CAAejF,EAAKjH,IACfpC,MAAK,WACFiI,GAAmB,OAI/BsB,eAAgB,YpBSzC,SAAP,mCoBRoCgF,CAAiBlF,EAAKjH,IACjBpC,MAAK,WACFiI,GAAmB,QAZ1BoB,EAAKjH,WAsB9B,sBAAK2D,UAAWb,EAAQpB,KAAxB,SACI,eAAC0K,GAAA,EAAD,CACIrJ,MAAM,UACN4B,UAAWC,IACXC,GAAE,UAAKyC,EAAWQ,IAAhB,WAHN,SAKI,eAAC,KAAD,QAIR,gBAAC,IAAD,WAEI,eAAC,IAAD,CAAOO,KAAI,UAAKf,EAAWe,KAAhB,WAAX,SACI,eAAC0C,GAAD,CACI5G,QAAS,WACL4H,EAAQM,UAEZ9N,UAAW,WACPwN,EAAQM,SACRxG,GAAmB,QAK/B,eAAC,IAAD,CAAOwC,KAAI,UAAKf,EAAWe,KAAhB,eAAX,SACI,eAACgD,GAAD,CACIlH,QAAS,WACL4H,EAAQM,UAEZ9N,UAAW,WACPwN,EAAQM,SACRxG,GAAmB,QAK/B,eAAC,IAAD,CAAOwC,KAAI,UAAKf,EAAWe,KAAhB,eAAX,SACI,eAACkD,GAAD,CACIpH,QAAS,WACL4H,EAAQM,UAEZ9N,UAAW,WACPwN,EAAQM,SACRxG,GAAmB,cCzH/C,IAAMnD,GAAYC,IAAWvD,EAAQ,CACjCa,KAAMqM,GAAMrM,OAGD,SAASqM,KACJ5J,KAAhB,IAEA,EAA4CO,IAAMC,SAAwB,MAA1E,mBAAQqJ,EAAR,KAAuBC,EAAvB,KACA,EAA0DvJ,IAAMC,UAAS,GAAzE,mBAAQuJ,EAAR,KAA8BC,EAA9B,KAWA,OATAzJ,IAAMqC,WAAU,YrByEb,WAAP,gCqBxEQqH,GACK/O,MAAK,SAAC2O,GACHC,EAAiBD,GACjBG,GAAwB,QAGjC,IAGC,sCAEMD,GACE,gBAAC,IAAD,WAEI,eAAC,IAAD,CAAOpE,KAAK,kBAAkB1D,UAAWmH,KAEzC,eAAC,IAAD,CAAOzD,KAAK,kBAAkB1D,UAAWS,KAExCmH,EACG,eAAC,IAAD,CAAU1H,GAAE,sBAAiB0H,KAE7B,eAAC,IAAD,CAAU1H,GAAE,yBCzCpC,IAQezF,GARA,SAACF,GAAD,OAAkBG,YAAa,CAE1CC,KAAM,MCEJoD,GAAYC,IAAWvD,GAAQ,CACjCa,KAAM2M,GAAO3M,OAGF,SAAS2M,KACJlK,KAEhB,OACI,gDCFRmK,IAASC,OACL,eAAC,IAAMC,WAAP,UACI,gBAACC,EAAA,EAAD,CAAe9N,MAAOA,EAAtB,UACI,eAAC+N,EAAA,EAAD,IACA,eAAC,IAAD,UACI,gBAAC,IAAD,WAEI,eAAC,IAAD,CAAO5E,KAAK,SAAS1D,UAAW2H,KAEhC,eAAC,IAAD,CAAOjE,KAAK,UAAU1D,UAAWiI,KAEjC,eAAC,IAAD,CAAU/H,GAAG,qBAM7BqI,SAASC,eAAe,S5BJrB,SAAkB3P,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI2P,IAAI7I,aAAwBrH,OAAOC,SAASkQ,MACpDC,SAAWpQ,OAAOC,SAASmQ,OAIvC,OAGFpQ,OAAOqQ,iBAAiB,QAAQ,WAC9B,IAAMhQ,EAAK,UAAMgH,aAAN,sBAEPvH,IAgEV,SAAiCO,EAAeC,GAE9CgQ,MAAMjQ,EAAO,CACXkQ,QAAS,CAAE,iBAAkB,YAE5B7P,MAAK,SAAC8P,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAAShH,QACO,MAAfiH,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CpQ,UAAUC,cAAcoQ,MAAMlQ,MAAK,SAACC,GAClCA,EAAakQ,aAAanQ,MAAK,WAC7BV,OAAOC,SAAS6Q,eAKpB1Q,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IAAI,oEAtFV4P,CAAwB1Q,EAAOC,GAI/BC,UAAUC,cAAcoQ,MAAMlQ,MAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,O4BlB/B0Q,GAKAxP,M","file":"static/js/main.09c228b9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@material-ui/core/styles'\r\n\r\nexport const theme = createTheme({\r\n\r\n})\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n\r\n    main: {\r\n        flexGrow: 1,\r\n        height: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    nav: {\r\n\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import { v1 as uuid } from 'uuid'\r\n\r\nconst CODELIST = [{ id:'1', name:'TEH' }]\r\n\r\nexport interface ICode {\r\n    id: string\r\n    name: string\r\n    expiredAt?: string\r\n    url?: string\r\n    imageUrl?: string\r\n}\r\n\r\nexport interface ICodelistQuery {\r\n    id?: string\r\n    //primary?: boolean\r\n}\r\n\r\nexport async function fetchCodelist(query:ICodelistQuery): Promise<ICode[]> {\r\n    let codelist: ICode[]\r\n    if (localStorage.getItem('codelist')) {\r\n        codelist = JSON.parse(localStorage.getItem('codelist')!)\r\n    } else {\r\n        codelist = CODELIST\r\n    }\r\n    if (query) {\r\n        if (query.id !== undefined) {\r\n            codelist = codelist.filter((code) => code.id === query.id)\r\n        }\r\n        //if (query.primary !== undefined) {\r\n        //    codelist = codelist.filter((code) => code.primary === query.primary)\r\n        //}\r\n    }\r\n    return codelist\r\n}\r\n\r\nexport async function fetchCode(id: string): Promise<ICode|null> {\r\n    const [ code ] = await fetchCodelist({ id })\r\n    return code || null\r\n}\r\n\r\nexport async function createCode(data: Partial<ICode>) {\r\n    if (!data.name) {\r\n        throw Error()\r\n    }\r\n    const code: ICode = {\r\n        ...data,\r\n        id: uuid(),\r\n        name: data.name,\r\n    }\r\n    const codelist: ICode[] = localStorage.getItem('codelist') ? JSON.parse(localStorage.getItem('codelist')!) : []\r\n    codelist.push(code)\r\n    localStorage.setItem('codelist', JSON.stringify(codelist))\r\n    return code\r\n}\r\n\r\nexport async function updateCode(id: string, data: Partial<ICode>) {\r\n    if (!data.name) {\r\n        throw Error()\r\n    }\r\n    const code: ICode = {\r\n        ...data,\r\n        id,\r\n        name: data.name,\r\n    }\r\n    let codelist: ICode[] = localStorage.getItem('codelist') ? JSON.parse(localStorage.getItem('codelist')!) : []\r\n    codelist = codelist.map((existsCode) => existsCode.id !== id ? existsCode : code)\r\n    localStorage.setItem('codelist', JSON.stringify(codelist))\r\n    return code\r\n}\r\n\r\nexport async function deleteCode(id: string) {\r\n    let codelist: ICode[] = localStorage.getItem('codelist') ? JSON.parse(localStorage.getItem('codelist')!) : []\r\n    codelist = codelist.filter((code) => code.id !== id)\r\n    localStorage.setItem('codelist', JSON.stringify(codelist))\r\n}\r\n\r\nexport async function moveCodeUpward(id: string) {\r\n    let codelist: ICode[] = localStorage.getItem('codelist') ? JSON.parse(localStorage.getItem('codelist')!) : []\r\n    const i = codelist.findIndex(code => code.id === id)\r\n    if (i > 0) {\r\n        [codelist[i-1], codelist[i]] = [codelist[i], codelist[i-1]]\r\n    }\r\n    localStorage.setItem('codelist', JSON.stringify(codelist))\r\n}\r\n\r\nexport async function moveCodeDownward(id: string) {\r\n    let codelist: ICode[] = localStorage.getItem('codelist') ? JSON.parse(localStorage.getItem('codelist')!) : []\r\n    const i = codelist.findIndex(code => code.id === id)\r\n    if (i < codelist.length - 1) {\r\n        [codelist[i+1], codelist[i]] = [codelist[i], codelist[i+1]]\r\n    }\r\n    localStorage.setItem('codelist', JSON.stringify(codelist))\r\n}\r\n\r\nexport async function fetchCurrentCodeId() {\r\n    return localStorage.getItem('currentCodeId')\r\n}\r\n\r\nexport async function putCurrentCodeId(id: string) {\r\n    localStorage.setItem('currentCodeId', id)\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n\r\n    },\r\n\r\n    main: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    mainImage: {\r\n        display: 'block',\r\n    },\r\n\r\n    foot: {\r\n        position: 'sticky',\r\n        bottom: 0,\r\n    },\r\n    footToolbar: {\r\n        justifyContent: 'center',\r\n    },\r\n    footTabs: {\r\n\r\n    },\r\n    footTab: {\r\n        height: 64,\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    header: {\r\n\r\n    },\r\n    headerMenu: {\r\n        marginRight: 12,\r\n    },\r\n\r\n    menuAvatar: {\r\n        marginLeft: -12,\r\n        marginRight: 12,\r\n    },\r\n\r\n    menuListItem: {\r\n        paddingLeft: 20,\r\n        paddingRight: 20,\r\n    },\r\n    menuListItemIcon: {\r\n        minWidth: 44,\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './Header.styles'\r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Container from '@material-ui/core/Container'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport StorageIcon from '@material-ui/icons/Storage'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {SvgIcon} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Header.name,\r\n})\r\n\r\nexport interface IHeaderProps {\r\n    color?: 'transparent'\r\n    elevation?: number\r\n}\r\n\r\nexport default function Header(props: IHeaderProps) {\r\n    const classes = useStyles()\r\n\r\n    const { color, elevation } = props\r\n\r\n    const [ menuOpen, setMenuOpen ] = React.useState(false)\r\n\r\n    return (\r\n        <>\r\n\r\n            <AppBar position=\"sticky\" color={color} elevation={elevation}>\r\n                <Container maxWidth={false}>\r\n                    <Toolbar disableGutters>\r\n\r\n                        <IconButton\r\n                            className={classes.headerMenu}\r\n                            color=\"inherit\"\r\n                            edge=\"start\"\r\n                            onClick={() => setMenuOpen(true)}\r\n                        >\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n\r\n                        <Typography variant=\"h6\">\r\n                            Covidcode\r\n                        </Typography>\r\n\r\n                    </Toolbar>\r\n                </Container>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                anchor=\"left\"\r\n                open={menuOpen}\r\n                onClose={() => setMenuOpen(false)}\r\n            >\r\n                <AppBar position=\"sticky\" color={color} elevation={elevation}>\r\n                    <Container maxWidth={false}>\r\n                        <Toolbar disableGutters>\r\n                            <Avatar className={classes.menuAvatar} alt=\"Covidcode\" src={process.env.PUBLIC_URL + '/logo512.png'}/>\r\n                            <Typography variant=\"h6\">\r\n                                Covidcode\r\n                            </Typography>\r\n                        </Toolbar>\r\n                    </Container>\r\n                </AppBar>\r\n                <List>\r\n\r\n                    <ListItem\r\n                        className={classes.menuListItem}\r\n                        button\r\n                        component={NavLink}\r\n                        to={`/codes/codelist`}\r\n                    >\r\n                        <ListItemIcon className={classes.menuListItemIcon}>\r\n                            <SvgIcon><path fill=\"currentColor\" d=\"M2 14H8V20H2M16 8H10V10H16M2 10H8V4H2M10 4V6H22V4M10 20H16V18H10M10 16H22V14H10\"/></SvgIcon>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Сертификаты о вакцинации\"/>\r\n                    </ListItem>\r\n\r\n                    <ListItem\r\n                        className={classes.menuListItem}\r\n                        button\r\n                        component={NavLink}\r\n                        to={`/config`}\r\n                    >\r\n                        <ListItemIcon className={classes.menuListItemIcon}>\r\n                            <SvgIcon>\r\n                                {/*<path fill=\"currentColor\" d=\"M15.9,18.45C17.25,18.45 18.35,17.35 18.35,16C18.35,14.65 17.25,13.55 15.9,13.55C14.54,13.55 13.45,14.65 13.45,16C13.45,17.35 14.54,18.45 15.9,18.45M21.1,16.68L22.58,17.84C22.71,17.95 22.75,18.13 22.66,18.29L21.26,20.71C21.17,20.86 21,20.92 20.83,20.86L19.09,20.16C18.73,20.44 18.33,20.67 17.91,20.85L17.64,22.7C17.62,22.87 17.47,23 17.3,23H14.5C14.32,23 14.18,22.87 14.15,22.7L13.89,20.85C13.46,20.67 13.07,20.44 12.71,20.16L10.96,20.86C10.81,20.92 10.62,20.86 10.54,20.71L9.14,18.29C9.05,18.13 9.09,17.95 9.22,17.84L10.7,16.68L10.65,16L10.7,15.31L9.22,14.16C9.09,14.05 9.05,13.86 9.14,13.71L10.54,11.29C10.62,11.13 10.81,11.07 10.96,11.13L12.71,11.84C13.07,11.56 13.46,11.32 13.89,11.15L14.15,9.29C14.18,9.13 14.32,9 14.5,9H17.3C17.47,9 17.62,9.13 17.64,9.29L17.91,11.15C18.33,11.32 18.73,11.56 19.09,11.84L20.83,11.13C21,11.07 21.17,11.13 21.26,11.29L22.66,13.71C22.75,13.86 22.71,14.05 22.58,14.16L21.1,15.31L21.15,16L21.1,16.68M6.69,8.07C7.56,8.07 8.26,7.37 8.26,6.5C8.26,5.63 7.56,4.92 6.69,4.92A1.58,1.58 0 0,0 5.11,6.5C5.11,7.37 5.82,8.07 6.69,8.07M10.03,6.94L11,7.68C11.07,7.75 11.09,7.87 11.03,7.97L10.13,9.53C10.08,9.63 9.96,9.67 9.86,9.63L8.74,9.18L8,9.62L7.81,10.81C7.79,10.92 7.7,11 7.59,11H5.79C5.67,11 5.58,10.92 5.56,10.81L5.4,9.62L4.64,9.18L3.5,9.63C3.41,9.67 3.3,9.63 3.24,9.53L2.34,7.97C2.28,7.87 2.31,7.75 2.39,7.68L3.34,6.94L3.31,6.5L3.34,6.06L2.39,5.32C2.31,5.25 2.28,5.13 2.34,5.03L3.24,3.47C3.3,3.37 3.41,3.33 3.5,3.37L4.63,3.82L5.4,3.38L5.56,2.19C5.58,2.08 5.67,2 5.79,2H7.59C7.7,2 7.79,2.08 7.81,2.19L8,3.38L8.74,3.82L9.86,3.37C9.96,3.33 10.08,3.37 10.13,3.47L11.03,5.03C11.09,5.13 11.07,5.25 11,5.32L10.03,6.06L10.06,6.5L10.03,6.94Z\"/>*/}\r\n                                <path fill=\"currentColor\" d=\"M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z\" />\r\n                            </SvgIcon>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Настройки\"/>\r\n                    </ListItem>\r\n\r\n                </List>\r\n            </Drawer>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './Code.styles'\r\n\r\nimport { useParams } from 'react-router-dom'\r\nimport { fetchCode, fetchCodelist, putCurrentCodeId, ICode } from '../../../codes/services/CodesService'\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Header from '../../../../components/Header/Header'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Code.name,\r\n})\r\n\r\nexport default function Code() {\r\n    const classes = useStyles()\r\n\r\n    const { id } = useParams<{ id:string }>()\r\n\r\n    React.useEffect(() => {\r\n        putCurrentCodeId(id)\r\n    }, [id])\r\n\r\n    const [ code, setCode ] = React.useState<ICode | null>()\r\n    const [ codePending, setCodePending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        setCodePending(true)\r\n        fetchCode(id)\r\n            .then((code) => {\r\n                setCode(code)\r\n                setCodePending(false)\r\n            })\r\n        ;\r\n    }, [id])\r\n\r\n    const [ codelist, setCodelist ] = React.useState<ICode[] | null>(null)\r\n    const [ codelistPending, setCodelistPending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        if (!codelistPending) {\r\n            return\r\n        }\r\n        let active = true\r\n        fetchCodelist({})\r\n            .then((codelist) => {\r\n                if (active) {\r\n                    setCodelist(codelist)\r\n                    setCodelistPending(false)\r\n                }\r\n            })\r\n        ;\r\n        return () => {\r\n            active = false\r\n        }\r\n    }, [codelistPending])\r\n\r\n    return (\r\n        <>\r\n\r\n            {/*<AppBar position=\"sticky\" color=\"transparent\" elevation={0}>*/}\r\n            {/*    <Container maxWidth={false}>*/}\r\n            {/*        <Toolbar disableGutters>*/}\r\n            {/*            COVIDCODE*/}\r\n            {/*        </Toolbar>*/}\r\n            {/*    </Container>*/}\r\n            {/*</AppBar>*/}\r\n\r\n            <Header color=\"transparent\" elevation={0}/>\r\n\r\n            {codePending && (\r\n                <div>...</div>\r\n            )}\r\n\r\n            {code && (\r\n                <main className={classes.main}>\r\n\r\n                    {code.imageUrl && (\r\n                        <img className={classes.mainImage} src={code.imageUrl} alt=\"\"/>\r\n                    )}\r\n\r\n                </main>\r\n            )}\r\n\r\n            <div className={classes.foot}>\r\n                <Toolbar className={classes.footToolbar} disableGutters>\r\n                    {codelist && codelist.length > 1 && (\r\n                        <Tabs\r\n                            className={classes.footTabs}\r\n                            variant=\"scrollable\"\r\n                            value={id}\r\n                        >\r\n                            {codelist.map((code) => (\r\n                                <Tab\r\n                                    key={code.id}\r\n                                    className={classes.footTab}\r\n                                    label={code.name}\r\n                                    value={code.id}\r\n                                    component={NavLink}\r\n                                    to={`/codes/code/${code.id}`}\r\n                                    replace\r\n                                />\r\n                            ))}\r\n                        </Tabs>\r\n                    )}\r\n                </Toolbar>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n\r\n    },\r\n\r\n    progressContainer: {\r\n        position: 'relative',\r\n    },\r\n    progress: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n    },\r\n\r\n    main: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n\r\n    foot: {\r\n        pointerEvents: 'none',\r\n        position: 'sticky',\r\n        bottom: 0,\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        padding: 32,\r\n        '& > *': {\r\n            pointerEvents: 'all',\r\n        }\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => {\r\n    console.log('WTF', theme)\r\n    return createStyles({\r\n\r\n        root: {\r\n\r\n        },\r\n\r\n        status: {\r\n\r\n        },\r\n        status_valid: {\r\n            color: theme.palette.success.dark,\r\n        },\r\n        status_invalid: {\r\n            color: theme.palette.error.dark,\r\n        },\r\n\r\n    })\r\n}\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './CodelistItem.styles'\r\nimport clsx from 'clsx'\r\n\r\nimport { ICode } from '../../../codes/services/CodesService'\r\nimport { useHistory, useRouteMatch } from 'react-router-dom'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\r\n\r\nimport { compareAsc } from 'date-fns'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: CodelistItem.name,\r\n})\r\n\r\nexport interface ICodelistItemProps {\r\n    item: ICode\r\n    onMoveUpward: () => void\r\n    onMoveDownward: () => void\r\n}\r\n\r\nexport default function CodelistItem(props: ICodelistItemProps) {\r\n    const classes = useStyles(props)\r\n\r\n    const { item, onMoveUpward, onMoveDownward } = props\r\n\r\n    const [ menuOpen, setMenuOpen ] = React.useState(false)\r\n    const menuAnchorRef = React.useRef<HTMLButtonElement>(null)\r\n\r\n    const routeMatch = useRouteMatch()\r\n\r\n    const status = React.useMemo(() => {\r\n        if (item.expiredAt) {\r\n            if (compareAsc(new Date(item.expiredAt), new Date) > 0) {\r\n                return (\r\n                    <Typography className={clsx(classes.status, classes.status_valid)} variant=\"body2\">\r\n                        Действителен\r\n                    </Typography>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Typography className={clsx(classes.status, classes.status_invalid)} variant=\"body2\">\r\n                        Просрочен\r\n                    </Typography>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                <Typography className={clsx(classes.status)} color=\"textSecondary\" variant=\"body2\">\r\n                    Срок действия не указан\r\n                </Typography>\r\n            )\r\n        }\r\n    }, [item])\r\n\r\n    return (\r\n        <>\r\n\r\n            <ListItem\r\n                button\r\n                component={NavLink}\r\n                to={`/codes/code/${item.id}`}\r\n            >\r\n                <ListItemText\r\n                    disableTypography\r\n                    primary={(\r\n                        <>\r\n                            <Typography variant=\"body1\" color=\"textPrimary\" component=\"span\">{item.name}</Typography> <Typography variant=\"body1\" color=\"textSecondary\" component=\"span\">{item.url || ' '}</Typography>\r\n                        </>\r\n                    )}\r\n                    secondary={status}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                    <IconButton\r\n                        ref={menuAnchorRef}\r\n                        aria-label=\"comments\"\r\n                        edge=\"end\"\r\n                        onClick={() => setMenuOpen(true)}\r\n                    >\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n\r\n            {menuAnchorRef.current && (\r\n                <Menu\r\n                    anchorEl={menuAnchorRef.current}\r\n                    open={menuOpen}\r\n                    onClose={() => setMenuOpen(false)}\r\n                >\r\n\r\n                    <MenuItem\r\n                        onClick={() => { setMenuOpen(false); onMoveUpward() }}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <ArrowUpwardIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"Переместить выше\"\r\n                        />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem\r\n                        onClick={() => { setMenuOpen(false); onMoveDownward() }}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <ArrowDownwardIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"Переместить ниже\"\r\n                        />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem\r\n                        component={NavLink}\r\n                        to={`${routeMatch.path}/${item.id}/update`}\r\n                        onClick={() => setMenuOpen(false)}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <EditIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"Изменить\"\r\n                        />\r\n                    </MenuItem>\r\n\r\n                    <MenuItem\r\n                        component={NavLink}\r\n                        to={`${routeMatch.path}/${item.id}/delete`}\r\n                        onClick={() => setMenuOpen(false)}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <DeleteForeverIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"Удалить\"\r\n                        />\r\n                    </MenuItem>\r\n\r\n                </Menu>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './PageDialog.styles'\r\n\r\nimport Dialog from '@material-ui/core/Dialog'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: PageDialog.name,\r\n})\r\n\r\nexport interface IPageDialogProps {\r\n    open: boolean\r\n    onClose: () => void\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function PageDialog(props: IPageDialogProps) {\r\n    const classes = useStyles()\r\n\r\n    const { open, onClose, children } = props\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            fullScreen\r\n        >\r\n            {children}\r\n        </Dialog>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    back: {\r\n        marginRight: theme.spacing(1.5),\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './PageDialogHeader.styles'\r\n\r\nimport Container from '@material-ui/core/Container'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport AppBar from '@material-ui/core/AppBar'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: PageDialogHeader.name,\r\n})\r\n\r\nexport interface IPageDialogHeaderProps {\r\n    onClose: () => void\r\n    children: React.ReactNode\r\n}\r\n\r\nexport default function PageDialogHeader(props: IPageDialogHeaderProps) {\r\n    const classes = useStyles()\r\n\r\n    const { onClose, children } = props\r\n\r\n    return (\r\n        <AppBar position=\"sticky\" color=\"default\" elevation={1}>\r\n            <Container maxWidth={false}>\r\n                <Toolbar disableGutters>\r\n                    <IconButton\r\n                        className={classes.back}\r\n                        edge=\"start\"\r\n                        color=\"primary\"\r\n                        onClick={onClose}\r\n                    >\r\n                        <ArrowBackIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\">\r\n                        {children}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    form: {\r\n        paddingTop: 16,\r\n        paddingBottom: 16,\r\n    },\r\n\r\n    fieldContainer: {\r\n        paddingTop: 16,\r\n        paddingBottom: 16,\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\n\r\nimport TextField, { StandardTextFieldProps, FilledTextFieldProps, OutlinedTextFieldProps } from '@material-ui/core/TextField'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile'\r\n\r\nexport interface IStandardFileFieldProps extends StandardTextFieldProps {\r\n    onChangeValue: (value?: string) => void\r\n}\r\n\r\nexport interface IFilledFileFieldProps extends FilledTextFieldProps {\r\n    onChangeValue: (value?: string) => void\r\n}\r\n\r\nexport interface IOutlinedFileFieldProps extends OutlinedTextFieldProps {\r\n    onChangeValue: (value?: string) => void\r\n}\r\n\r\nexport type IFileFieldProps = IStandardFileFieldProps | IFilledFileFieldProps | IOutlinedFileFieldProps\r\n\r\nexport default function FileField(props: IFileFieldProps) {\r\n\r\n    const { value, onChangeValue, ...otherProps } = props\r\n\r\n    const fileInputRef = React.useRef<HTMLInputElement>(null)\r\n\r\n    const displayValue = React.useMemo(() => {\r\n        if (props.value && typeof props.value === 'string') {\r\n            return props.value.substring(0, 300) + '...'\r\n        }\r\n    }, [props.value])\r\n\r\n    return (\r\n        <>\r\n\r\n            <TextField\r\n                {...otherProps}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <IconButton\r\n                            disabled={props.disabled}\r\n                            onClick={() => {\r\n                                if (fileInputRef.current) {\r\n                                    fileInputRef.current.click()\r\n                                }\r\n                            }}\r\n                        >\r\n                            <AttachFileIcon/>\r\n                        </IconButton>\r\n                    ),\r\n                }}\r\n                value={displayValue || ''}\r\n                onChange={props.onChange}\r\n            />\r\n\r\n            <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                onInput={() => {\r\n                    if (fileInputRef.current) {\r\n                        const files = fileInputRef.current.files\r\n                        if (files && files.length) {\r\n                            const file = files[0]\r\n                            const reader = new FileReader()\r\n                            reader.onloadend = () => {\r\n                                onChangeValue(reader.result ? reader.result as string : undefined)\r\n                            }\r\n                            reader.readAsDataURL(file)\r\n                        }\r\n                    }\r\n                }}\r\n                tabIndex={-1}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    hidden: {\r\n        position: 'absolute',\r\n        visibility: 'hidden',\r\n        width: 1,\r\n        height: 1,\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './DateField.styles'\r\n\r\n//import DateAdapter from '@mui/lab/AdapterDateFns'\r\n//import LocalizationProvider from '@mui/lab/LocalizationProvider'\r\n//\r\n//import TextField, { StandardTextFieldProps, FilledTextFieldProps, OutlinedTextFieldProps, TextFieldProps} from '@mui/material/TextField'\r\n//import IconButton from '@mui/material/IconButton'\r\n//import UploadIcon from '@mui/icons-material/Upload'\r\n//import MobileDatePicker from '@mui/lab/MobileDatePicker'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: DateField.name,\r\n})\r\n\r\nexport interface IDateFieldProps {\r\n    label?: string\r\n    value?: string | null\r\n    onChangeValue: (value?: Date | null) => void\r\n}\r\n\r\nexport default function DateField(props: IDateFieldProps) {\r\n    const classes = useStyles(props)\r\n\r\n    const { label, value, onChangeValue } = props\r\n\r\n    return null\r\n    //return (\r\n    //    <LocalizationProvider dateAdapter={DateAdapter}>\r\n    //        <MobileDatePicker\r\n    //            label={label}\r\n    //            inputFormat=\"dd.MM.yyyy\"\r\n    //            value={value}\r\n    //            onChange={onChangeValue}\r\n    //            renderInput={(params) => <TextField {...params} />}\r\n    //        />\r\n    //    </LocalizationProvider>\r\n    //)\r\n}\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './CodelistItemForm.styles'\r\n\r\nimport { ICode } from '../../../codes/services/CodesService'\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\nimport FileField from '../../../../components/FileField/FileField'\r\nimport DateField from '../../../../components/DateField/DateField'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: CodelistItemForm.name,\r\n})\r\n\r\nexport interface ICodelistItemFormProps {\r\n    data: Partial<ICode>\r\n    onChangeData: (data: Partial<ICode>) => void\r\n    disabled?: boolean\r\n}\r\n\r\nexport default function CodelistItemForm(props: ICodelistItemFormProps) {\r\n    const classes = useStyles()\r\n\r\n    const { data, onChangeData, disabled } = props\r\n\r\n    return (\r\n        <form className={classes.form}>\r\n\r\n            <div className={classes.fieldContainer}>\r\n                <TextField\r\n                    label=\"Название (чем короче, тем лучше)\"\r\n                    name=\"name\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    disabled={disabled}\r\n                    value={data.name || ''}\r\n                    onChange={({ target:{ value }}) => {\r\n                        onChangeData({ ...data, name:value })\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <div className={classes.fieldContainer}>\r\n                <DateField\r\n                    label=\"Срок действия до\"\r\n                    value={data.expiredAt || null}\r\n                    onChangeValue={(value) => {\r\n                        const expiredAt = value ? value.toJSON() : undefined\r\n                        onChangeData({ ...data, expiredAt })\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <div className={classes.fieldContainer}>\r\n                <TextField\r\n                    label=\"Адрес страницы на Госуслугах\"\r\n                    name=\"url\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    disabled={disabled}\r\n                    value={data.url || ''}\r\n                    onChange={({ target:{ value }}) => {\r\n                        onChangeData({ ...data, url:value })\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <div className={classes.fieldContainer}>\r\n                <FileField\r\n                    label=\"Адрес изображения\"\r\n                    name=\"url\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    disabled={disabled}\r\n                    value={data.imageUrl || ''}\r\n                    onChangeValue={(value) => {\r\n                        onChangeData({ ...data, imageUrl:value })\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { createCode, ICode } from '../../../../codes/services/CodesService'\r\n\r\nimport PageDialog from '../../../../../components/PageDialog/PageDialog'\r\nimport PageDialogHeader from '../../../../../components/PageDialog/PageDialogHeader'\r\nimport Container from '@material-ui/core/Container'\r\nimport CodelistItemForm from '../../CodelistItemForm/CodelistItemForm'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport interface ICreateItemProps {\r\n    onClose: () => void\r\n    onSuccess: (code: ICode) => void\r\n}\r\n\r\nexport default function CreateItem(props: ICreateItemProps) {\r\n    const { onClose, onSuccess } = props\r\n\r\n    const [ data, setData ] = React.useState<Partial<ICode>>({})\r\n\r\n    const [ submitPending, setSubmitPending ] = React.useState(false)\r\n\r\n    const handleSubmit = () => {\r\n        setSubmitPending(true)\r\n        createCode(data)\r\n            .then((code) => {\r\n                onSuccess(code)\r\n            })\r\n        ;\r\n    }\r\n\r\n    return (\r\n        <PageDialog\r\n            open\r\n            onClose={onClose}\r\n        >\r\n\r\n            <PageDialogHeader\r\n                onClose={onClose}\r\n            >\r\n                Новая запись о сертификате вакцинации\r\n            </PageDialogHeader>\r\n\r\n            <Container maxWidth=\"md\">\r\n\r\n                <CodelistItemForm\r\n                    data={data}\r\n                    onChangeData={setData}\r\n                    disabled={submitPending}\r\n                />\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    disabled={submitPending}\r\n                    onClick={handleSubmit}\r\n                >\r\n                    Сохранить\r\n                </Button>\r\n\r\n            </Container>\r\n\r\n        </PageDialog>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useParams } from 'react-router-dom'\r\nimport { fetchCode, updateCode, ICode } from '../../../../codes/services/CodesService'\r\n\r\nimport PageDialog from '../../../../../components/PageDialog/PageDialog'\r\nimport PageDialogHeader from '../../../../../components/PageDialog/PageDialogHeader'\r\nimport Container from '@material-ui/core/Container'\r\nimport CodelistItemForm from '../../CodelistItemForm/CodelistItemForm'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport interface IUpdateItemProps {\r\n    onClose: () => void\r\n    onSuccess: (code: ICode) => void\r\n}\r\n\r\nexport default function UpdateItem(props: IUpdateItemProps) {\r\n    const { onClose, onSuccess } = props\r\n\r\n    const { id } = useParams<{ id:string }>()\r\n\r\n    const [ code, setCode ] = React.useState<Partial<ICode> | null>()\r\n    const [ codePending, setCodePending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        setCodePending(true)\r\n        fetchCode(id)\r\n            .then((code) => {\r\n                setCode(code)\r\n                setCodePending(false)\r\n            })\r\n        ;\r\n    }, [id])\r\n\r\n    const [ submitPending, setSubmitPending ] = React.useState(false)\r\n\r\n    const handleSubmit = () => {\r\n        if (!code) {\r\n            return\r\n        }\r\n        setSubmitPending(true)\r\n        updateCode(id, code)\r\n            .then((code) => {\r\n                onSuccess(code)\r\n            })\r\n        ;\r\n    }\r\n\r\n    return (\r\n        <PageDialog\r\n            open\r\n            onClose={onClose}\r\n        >\r\n\r\n            <PageDialogHeader\r\n                onClose={onClose}\r\n            >\r\n                Запись о сертификате вакцинации\r\n            </PageDialogHeader>\r\n\r\n            {code && (\r\n                <Container maxWidth=\"md\">\r\n\r\n                    <CodelistItemForm\r\n                        data={code}\r\n                        onChangeData={setCode}\r\n                        disabled={submitPending}\r\n                    />\r\n\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        disabled={submitPending}\r\n                        onClick={handleSubmit}\r\n                    >\r\n                        Сохранить\r\n                    </Button>\r\n\r\n                </Container>\r\n            )}\r\n\r\n        </PageDialog>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useParams } from 'react-router-dom'\r\nimport { deleteCode, ICode } from '../../../../codes/services/CodesService'\r\n\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nexport interface IDeleteItemProps {\r\n    onClose: () => void\r\n    onSuccess: () => void\r\n}\r\n\r\nexport default function DeleteItem(props: IDeleteItemProps) {\r\n    const { onClose, onSuccess } = props\r\n\r\n    const { id } = useParams<{ id:string }>()\r\n\r\n    const handleConfirm = () => {\r\n        deleteCode(id)\r\n            .then(() => {\r\n                onSuccess()\r\n            })\r\n        ;\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={true}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                Удаление кода\r\n            </DialogTitle>\r\n\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Действительно удалить код?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n\r\n                <Button\r\n                    onClick={onClose}\r\n                    autoFocus\r\n                >\r\n                    Отмена\r\n                </Button>\r\n\r\n                <Button\r\n                    onClick={handleConfirm}\r\n                >\r\n                    Удалить\r\n                </Button>\r\n\r\n            </DialogActions>\r\n\r\n        </Dialog>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './Codelist.styles'\r\n\r\nimport { fetchCodelist, moveCodeUpward, moveCodeDownward, ICode } from '../../../codes/services/CodesService'\r\nimport { useHistory, useRouteMatch } from 'react-router-dom'\r\n\r\nimport Header from '../../../../components/Header/Header'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport List from '@material-ui/core/List'\r\nimport CodelistItem from '../CodelistItem/CodelistItem'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nimport CreateItem from '../CodelistTool/CreateItem/CreateItem'\r\nimport UpdateItem from '../CodelistTool/UpdateItem/UpdateItem'\r\nimport DeleteItem from '../CodelistTool/DeleteItem/DeleteItem'\r\n\r\nimport { Switch, Route, NavLink } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Codelist.name,\r\n})\r\n\r\nexport default function Codelist() {\r\n    const classes = useStyles()\r\n\r\n    const [ codelist, setCodelist ] = React.useState<ICode[] | null>(null)\r\n    const [ codelistPending, setCodelistPending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        if (!codelistPending) {\r\n            return\r\n        }\r\n        let active = true\r\n        fetchCodelist({})\r\n            .then((codelist) => {\r\n                if (active) {\r\n                    setCodelist(codelist)\r\n                    setCodelistPending(false)\r\n                }\r\n            })\r\n        ;\r\n        return () => {\r\n            active = false\r\n        }\r\n    }, [codelistPending])\r\n\r\n    const history = useHistory()\r\n    const routeMatch = useRouteMatch()\r\n\r\n    return (\r\n        <>\r\n\r\n            <Header/>\r\n\r\n            {codelistPending && (\r\n                <div className={classes.progressContainer}>\r\n                    <LinearProgress className={classes.progress} color=\"secondary\"/>\r\n                </div>\r\n            )}\r\n\r\n            <div className={classes.main}>\r\n                {codelist && (\r\n                    <List>\r\n                        {codelist.map((item) => (\r\n                            <CodelistItem\r\n                                key={item.id}\r\n                                item={item}\r\n                                onMoveUpward={() => {\r\n                                    moveCodeUpward(item.id)\r\n                                        .then(() => {\r\n                                            setCodelistPending(true)\r\n                                        })\r\n                                    ;\r\n                                }}\r\n                                onMoveDownward={() => {\r\n                                    moveCodeDownward(item.id)\r\n                                        .then(() => {\r\n                                            setCodelistPending(true)\r\n                                        })\r\n                                    ;\r\n                                }}\r\n                            />\r\n                        ))}\r\n                    </List>\r\n                )}\r\n            </div>\r\n\r\n            <div className={classes.foot}>\r\n                <Fab\r\n                    color=\"primary\"\r\n                    component={NavLink}\r\n                    to={`${routeMatch.url}/create`}\r\n                >\r\n                    <AddIcon/>\r\n                </Fab>\r\n            </div>\r\n\r\n            <Switch>\r\n\r\n                <Route path={`${routeMatch.path}/create`}>\r\n                    <CreateItem\r\n                        onClose={() => {\r\n                            history.goBack()\r\n                        }}\r\n                        onSuccess={() => {\r\n                            history.goBack()\r\n                            setCodelistPending(true)\r\n                        }}\r\n                    />\r\n                </Route>\r\n\r\n                <Route path={`${routeMatch.path}/:id/update`}>\r\n                    <UpdateItem\r\n                        onClose={() => {\r\n                            history.goBack()\r\n                        }}\r\n                        onSuccess={() => {\r\n                            history.goBack()\r\n                            setCodelistPending(true)\r\n                        }}\r\n                    />\r\n                </Route>\r\n\r\n                <Route path={`${routeMatch.path}/:id/delete`}>\r\n                    <DeleteItem\r\n                        onClose={() => {\r\n                            history.goBack()\r\n                        }}\r\n                        onSuccess={() => {\r\n                            history.goBack()\r\n                            setCodelistPending(true)\r\n                        }}\r\n                    />\r\n                </Route>\r\n\r\n            </Switch>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './Codes.styles'\r\n\r\nimport { fetchCurrentCodeId, ICode } from '../../services/CodesService'\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport Code from '../../../codes-code/components/Code/Code'\r\nimport Codelist from '../../../codes-codelist/components/Codelist/Codelist'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Codes.name,\r\n})\r\n\r\nexport default function Codes() {\r\n    const classes = useStyles()\r\n\r\n    const [ currentCodeId, setCurrentCodeId ] = React.useState<string | null>(null)\r\n    const [ currentCodeIdPending, setCurrentCodeIdPending ] = React.useState(true)\r\n\r\n    React.useEffect(() => {\r\n        fetchCurrentCodeId()\r\n            .then((currentCodeId) => {\r\n                setCurrentCodeId(currentCodeId)\r\n                setCurrentCodeIdPending(false)\r\n            })\r\n        ;\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n\r\n            {!currentCodeIdPending && (\r\n                <Switch>\r\n\r\n                    <Route path=\"/codes/codelist\" component={Codelist}/>\r\n\r\n                    <Route path=\"/codes/code/:id\" component={Code}/>\r\n\r\n                    {currentCodeId ? (\r\n                        <Redirect to={`/codes/code/${currentCodeId}`}/>\r\n                    ) : (\r\n                        <Redirect to={`/codes/codelist`}/>\r\n                    )}\r\n\r\n                </Switch>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n","import { Theme, createStyles } from '@material-ui/core'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n    root: {\r\n\r\n    },\r\n\r\n})\r\n\r\nexport default styles\r\n","import React from 'react'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport styles from './Config.styles'\r\n\r\nimport { fetchConfig, IConfig } from '../../services/ConfigService'\r\n\r\nconst useStyles = makeStyles(styles, {\r\n    name: Config.name,\r\n})\r\n\r\nexport default function Config() {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n\r\n            config\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport reportWebVitals from './reportWebVitals'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { theme } from './theme'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport Codes from './modules/codes/components/Codes/Codes'\nimport Config from './modules/config/containers/Config/Config'\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <HashRouter>\n                <Switch>\n\n                    <Route path=\"/codes\" component={Codes}/>\n\n                    <Route path=\"/config\" component={Config}/>\n\n                    <Redirect to=\"/codes\"/>\n\n                </Switch>\n            </HashRouter>\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}